{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Backfila \u00b6 Backfila is a service that manages backfill state, calling into other services to do batched work. Building \u00b6 Build backfila: $ ./gradlew clean shadowJar Run the Service \u00b6 From the command line \u00b6 $ java -jar service/build/libs/service.jar From IntelliJ \u00b6 Right-click on BackfilaService.kt and select Run From Docker \u00b6 Building \u00b6 Build a Docker image of backfila: $ docker build -t backfila-0.0.1 service Running locally \u00b6 Visit Docker for Mac to install Docker on a Mac for testing. Run backfila in Docker locally: $ docker run -p 8080:8080 backfila-0.0.1 Visit the UI at http://localhost:8080/ Client \u00b6 The backfila client must be installed in your services to expose their backfill code. It also provides the batching mechanism and templates for common types of backfills. Connectors \u00b6 Connectors can be installed to provide a way to connect to your services. The included default connectors are HTTPS and Envoy. Add custom connectors using Guice map binding. Gradle \u00b6 implementation ( \"app.cash.backfila:backfila-client:0.1.0\" ) implementation ( \"app.cash.backfila:backfila-service-lib:0.1.0\" ) License \u00b6 Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Overview"},{"location":"#backfila","text":"Backfila is a service that manages backfill state, calling into other services to do batched work.","title":"Backfila"},{"location":"#building","text":"Build backfila: $ ./gradlew clean shadowJar","title":"Building"},{"location":"#run-the-service","text":"","title":"Run the Service"},{"location":"#from-the-command-line","text":"$ java -jar service/build/libs/service.jar","title":"From the command line"},{"location":"#from-intellij","text":"Right-click on BackfilaService.kt and select Run","title":"From IntelliJ"},{"location":"#from-docker","text":"","title":"From Docker"},{"location":"#building_1","text":"Build a Docker image of backfila: $ docker build -t backfila-0.0.1 service","title":"Building"},{"location":"#running-locally","text":"Visit Docker for Mac to install Docker on a Mac for testing. Run backfila in Docker locally: $ docker run -p 8080:8080 backfila-0.0.1 Visit the UI at http://localhost:8080/","title":"Running locally"},{"location":"#client","text":"The backfila client must be installed in your services to expose their backfill code. It also provides the batching mechanism and templates for common types of backfills.","title":"Client"},{"location":"#connectors","text":"Connectors can be installed to provide a way to connect to your services. The included default connectors are HTTPS and Envoy. Add custom connectors using Guice map binding.","title":"Connectors"},{"location":"#gradle","text":"implementation ( \"app.cash.backfila:backfila-client:0.1.0\" ) implementation ( \"app.cash.backfila:backfila-service-lib:0.1.0\" )","title":"Gradle"},{"location":"#license","text":"Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"changelog/","text":"Change Log \u00b6 Version 0.1.0 (2019-09-01) \u00b6 Initial release.","title":"Change Log"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#version-010-2019-09-01","text":"Initial release.","title":"Version 0.1.0 (2019-09-01)"},{"location":"releasing/","text":"Releasing \u00b6 Prerequisite: Sonatype (Maven Central) Account \u00b6 Create an account on the Sonatype issues site . Ask an existing publisher to open an issue requesting publishing permissions for backfila projects. Prerequisite: GPG Keys \u00b6 Generate a GPG key (RSA, 4096 bit, 3650 day) expiry, or use an existing one. You should leave the password empty for this key. $ gpg --full-generate-key Upload the GPG keys to public servers: $ gpg --list-keys --keyid-format LONG /Users/johnbarber/.gnupg/pubring.kbx ------------------------------ pub rsa4096/XXXXXXXXXXXXXXXX 2019-07-16 [SC] [expires: 2029-07-13] YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY uid [ultimate] John Barber <jbarber@cash.app> sub rsa4096/ZZZZZZZZZZZZZZZZ 2019-07-16 [E] [expires: 2029-07-13] $ gpg --send-keys --keyserver keyserver.ubuntu.com XXXXXXXXXXXXXXXX Prerequisite: Gradle Properties \u00b6 Define publishing properties in ~/.gradle/gradle.properties : signing.keyId=1A2345F8 signing.password= signing.secretKeyRingFile=/Users/jwilson/.gnupg/secring.gpg signing.keyId is the GPG key\u2019s ID. Get it with this: $ gpg --list-keys --keyid-format SHORT signing.password is the password for this key. This might be empty! signing.secretKeyRingFile is the absolute path for secring.gpg . You may need to export this file manually with the following command where XXXXXXXX is the keyId above: $ gpg --keyring secring.gpg --export-secret-key XXXXXXXX > ~/.gnupg/secring.gpg Cutting a Release \u00b6 Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Set environment variables with your Sonatype credentials . export SONATYPE_NEXUS_USERNAME=johnbarber export SONATYPE_NEXUS_PASSWORD=`pbpaste` Update, build, and upload: sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"backfila:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"backfila:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -name \"README.md\"` ./gradlew clean uploadArchives Visit Sonatype Nexus to promote (close then release) the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a backfila-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push && git push --tags","title":"Releasing"},{"location":"releasing/#releasing","text":"","title":"Releasing"},{"location":"releasing/#prerequisite-sonatype-maven-central-account","text":"Create an account on the Sonatype issues site . Ask an existing publisher to open an issue requesting publishing permissions for backfila projects.","title":"Prerequisite: Sonatype (Maven Central) Account"},{"location":"releasing/#prerequisite-gpg-keys","text":"Generate a GPG key (RSA, 4096 bit, 3650 day) expiry, or use an existing one. You should leave the password empty for this key. $ gpg --full-generate-key Upload the GPG keys to public servers: $ gpg --list-keys --keyid-format LONG /Users/johnbarber/.gnupg/pubring.kbx ------------------------------ pub rsa4096/XXXXXXXXXXXXXXXX 2019-07-16 [SC] [expires: 2029-07-13] YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY uid [ultimate] John Barber <jbarber@cash.app> sub rsa4096/ZZZZZZZZZZZZZZZZ 2019-07-16 [E] [expires: 2029-07-13] $ gpg --send-keys --keyserver keyserver.ubuntu.com XXXXXXXXXXXXXXXX","title":"Prerequisite: GPG Keys"},{"location":"releasing/#prerequisite-gradle-properties","text":"Define publishing properties in ~/.gradle/gradle.properties : signing.keyId=1A2345F8 signing.password= signing.secretKeyRingFile=/Users/jwilson/.gnupg/secring.gpg signing.keyId is the GPG key\u2019s ID. Get it with this: $ gpg --list-keys --keyid-format SHORT signing.password is the password for this key. This might be empty! signing.secretKeyRingFile is the absolute path for secring.gpg . You may need to export this file manually with the following command where XXXXXXXX is the keyId above: $ gpg --keyring secring.gpg --export-secret-key XXXXXXXX > ~/.gnupg/secring.gpg","title":"Prerequisite: Gradle Properties"},{"location":"releasing/#cutting-a-release","text":"Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Set environment variables with your Sonatype credentials . export SONATYPE_NEXUS_USERNAME=johnbarber export SONATYPE_NEXUS_PASSWORD=`pbpaste` Update, build, and upload: sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"backfila:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"backfila:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -name \"README.md\"` ./gradlew clean uploadArchives Visit Sonatype Nexus to promote (close then release) the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a backfila-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push && git push --tags","title":"Cutting a Release"},{"location":"0.x/client/","text":"client Packages \u00b6 Name Summary app.cash.backfila.client app.cash.backfila.protos.service Index \u00b6 All Types","title":"client"},{"location":"0.x/client/#packages","text":"Name Summary app.cash.backfila.client app.cash.backfila.protos.service","title":"Packages"},{"location":"0.x/client/#index","text":"All Types","title":"Index"},{"location":"0.x/client/alltypes/","text":"All Types \u00b6 Name Summary app.cash.backfila.client.BackfilaApi app.cash.backfila.protos.service.ConfigureServiceRequest app.cash.backfila.protos.service.ConfigureServiceResponse app.cash.backfila.client.Connectors app.cash.backfila.client.EnvoyConnectorData app.cash.backfila.protos.service.Parameter In this file: APIs that the service provides to the client.","title":"Home"},{"location":"0.x/client/alltypes/#all-types","text":"Name Summary app.cash.backfila.client.BackfilaApi app.cash.backfila.protos.service.ConfigureServiceRequest app.cash.backfila.protos.service.ConfigureServiceResponse app.cash.backfila.client.Connectors app.cash.backfila.client.EnvoyConnectorData app.cash.backfila.protos.service.Parameter In this file: APIs that the service provides to the client.","title":"All Types"},{"location":"0.x/client/app.cash.backfila.client/","text":"client / app.cash.backfila.client Package app.cash.backfila.client \u00b6 Types \u00b6 Name Summary BackfilaApi interface BackfilaApi Connectors object Connectors EnvoyConnectorData data class EnvoyConnectorData","title":"Home"},{"location":"0.x/client/app.cash.backfila.client/#package-appcashbackfilaclient","text":"","title":"Package app.cash.backfila.client"},{"location":"0.x/client/app.cash.backfila.client/#types","text":"Name Summary BackfilaApi interface BackfilaApi Connectors object Connectors EnvoyConnectorData data class EnvoyConnectorData","title":"Types"},{"location":"0.x/client/app.cash.backfila.client/-backfila-api/","text":"client / app.cash.backfila.client / BackfilaApi BackfilaApi \u00b6 interface BackfilaApi Functions \u00b6 Name Summary configureService abstract fun configureService(request: ConfigureServiceRequest ): Call< ConfigureServiceResponse >","title":"Home"},{"location":"0.x/client/app.cash.backfila.client/-backfila-api/#backfilaapi","text":"interface BackfilaApi","title":"BackfilaApi"},{"location":"0.x/client/app.cash.backfila.client/-backfila-api/#functions","text":"Name Summary configureService abstract fun configureService(request: ConfigureServiceRequest ): Call< ConfigureServiceResponse >","title":"Functions"},{"location":"0.x/client/app.cash.backfila.client/-backfila-api/configure-service/","text":"client / app.cash.backfila.client / BackfilaApi / configureService configureService \u00b6 @POST(\"/configure_service\") @Headers([\"Accept: application/x-protobuf\", \"Content-Type: application/x-protobuf\"]) abstract fun configureService(@Body request: ConfigureServiceRequest ): Call< ConfigureServiceResponse >","title":"Configure service"},{"location":"0.x/client/app.cash.backfila.client/-backfila-api/configure-service/#configureservice","text":"@POST(\"/configure_service\") @Headers([\"Accept: application/x-protobuf\", \"Content-Type: application/x-protobuf\"]) abstract fun configureService(@Body request: ConfigureServiceRequest ): Call< ConfigureServiceResponse >","title":"configureService"},{"location":"0.x/client/app.cash.backfila.client/-connectors/","text":"client / app.cash.backfila.client / Connectors Connectors \u00b6 object Connectors Properties \u00b6 Name Summary ENVOY const val ENVOY: String HTTP const val HTTP: String","title":"Home"},{"location":"0.x/client/app.cash.backfila.client/-connectors/#connectors","text":"object Connectors","title":"Connectors"},{"location":"0.x/client/app.cash.backfila.client/-connectors/#properties","text":"Name Summary ENVOY const val ENVOY: String HTTP const val HTTP: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.client/-connectors/-e-n-v-o-y/","text":"client / app.cash.backfila.client / Connectors / ENVOY ENVOY \u00b6 const val ENVOY: String","title":" e n v o y"},{"location":"0.x/client/app.cash.backfila.client/-connectors/-e-n-v-o-y/#envoy","text":"const val ENVOY: String","title":"ENVOY"},{"location":"0.x/client/app.cash.backfila.client/-connectors/-h-t-t-p/","text":"client / app.cash.backfila.client / Connectors / HTTP HTTP \u00b6 const val HTTP: String","title":" h t t p"},{"location":"0.x/client/app.cash.backfila.client/-connectors/-h-t-t-p/#http","text":"const val HTTP: String","title":"HTTP"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/","text":"client / app.cash.backfila.client / EnvoyConnectorData EnvoyConnectorData \u00b6 data class EnvoyConnectorData Constructors \u00b6 Name Summary <init> EnvoyConnectorData(clusterType: String ) Properties \u00b6 Name Summary clusterType val clusterType: String","title":"Home"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/#envoyconnectordata","text":"data class EnvoyConnectorData","title":"EnvoyConnectorData"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/#constructors","text":"Name Summary <init> EnvoyConnectorData(clusterType: String )","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/#properties","text":"Name Summary clusterType val clusterType: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/-init-/","text":"client / app.cash.backfila.client / EnvoyConnectorData / <init> <init> \u00b6 EnvoyConnectorData(clusterType: String )","title":" init "},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/-init-/#init","text":"EnvoyConnectorData(clusterType: String )","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/cluster-type/","text":"client / app.cash.backfila.client / EnvoyConnectorData / clusterType clusterType \u00b6 val clusterType: String","title":"Cluster type"},{"location":"0.x/client/app.cash.backfila.client/-envoy-connector-data/cluster-type/#clustertype","text":"val clusterType: String","title":"clusterType"},{"location":"0.x/client/app.cash.backfila.protos.service/","text":"client / app.cash.backfila.protos.service Package app.cash.backfila.protos.service \u00b6 Types \u00b6 Name Summary ConfigureServiceRequest class ConfigureServiceRequest : Message< ConfigureServiceRequest , Builder > ConfigureServiceResponse class ConfigureServiceResponse : Message< ConfigureServiceResponse , Builder > Parameter class Parameter : Message< Parameter , Builder > In this file: APIs that the service provides to the client.","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/#package-appcashbackfilaprotosservice","text":"","title":"Package app.cash.backfila.protos.service"},{"location":"0.x/client/app.cash.backfila.protos.service/#types","text":"Name Summary ConfigureServiceRequest class ConfigureServiceRequest : Message< ConfigureServiceRequest , Builder > ConfigureServiceResponse class ConfigureServiceResponse : Message< ConfigureServiceResponse , Builder > Parameter class Parameter : Message< Parameter , Builder > In this file: APIs that the service provides to the client.","title":"Types"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest ConfigureServiceRequest \u00b6 class ConfigureServiceRequest : Message< ConfigureServiceRequest , Builder > Types \u00b6 Name Summary BackfillData class BackfillData : Message< BackfillData , Builder > Builder class Builder : Builder< ConfigureServiceRequest , Builder > Constructors \u00b6 Name Summary <init> ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String ) ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< ConfigureServiceRequest > DEFAULT_CONNECTOR_EXTRA_DATA static val DEFAULT_CONNECTOR_EXTRA_DATA: String DEFAULT_CONNECTOR_TYPE static val DEFAULT_CONNECTOR_TYPE: String DEFAULT_SLACK_CHANNEL static val DEFAULT_SLACK_CHANNEL: String backfills val backfills: MutableList < BackfillData > List of all available backfills in this service connector_extra_data val connector_extra_data: String Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"} connector_type val connector_type: String This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase). slack_channel val slack_channel: String Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/#configureservicerequest","text":"class ConfigureServiceRequest : Message< ConfigureServiceRequest , Builder >","title":"ConfigureServiceRequest"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/#types","text":"Name Summary BackfillData class BackfillData : Message< BackfillData , Builder > Builder class Builder : Builder< ConfigureServiceRequest , Builder >","title":"Types"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/#constructors","text":"Name Summary <init> ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String ) ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< ConfigureServiceRequest > DEFAULT_CONNECTOR_EXTRA_DATA static val DEFAULT_CONNECTOR_EXTRA_DATA: String DEFAULT_CONNECTOR_TYPE static val DEFAULT_CONNECTOR_TYPE: String DEFAULT_SLACK_CHANNEL static val DEFAULT_SLACK_CHANNEL: String backfills val backfills: MutableList < BackfillData > List of all available backfills in this service connector_extra_data val connector_extra_data: String Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"} connector_type val connector_type: String This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase). slack_channel val slack_channel: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-a-d-a-p-t-e-r/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< ConfigureServiceRequest >","title":" a d a p t e r"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< ConfigureServiceRequest >","title":"ADAPTER"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-d-e-f-a-u-l-t_-c-o-n-n-e-c-t-o-r_-e-x-t-r-a_-d-a-t-a/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / DEFAULT_CONNECTOR_EXTRA_DATA DEFAULT_CONNECTOR_EXTRA_DATA \u00b6 static val DEFAULT_CONNECTOR_EXTRA_DATA: String","title":" d e f a u l t  c o n n e c t o r  e x t r a  d a t a"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-d-e-f-a-u-l-t_-c-o-n-n-e-c-t-o-r_-e-x-t-r-a_-d-a-t-a/#default_connector_extra_data","text":"static val DEFAULT_CONNECTOR_EXTRA_DATA: String","title":"DEFAULT_CONNECTOR_EXTRA_DATA"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-d-e-f-a-u-l-t_-c-o-n-n-e-c-t-o-r_-t-y-p-e/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / DEFAULT_CONNECTOR_TYPE DEFAULT_CONNECTOR_TYPE \u00b6 static val DEFAULT_CONNECTOR_TYPE: String","title":" d e f a u l t  c o n n e c t o r  t y p e"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-d-e-f-a-u-l-t_-c-o-n-n-e-c-t-o-r_-t-y-p-e/#default_connector_type","text":"static val DEFAULT_CONNECTOR_TYPE: String","title":"DEFAULT_CONNECTOR_TYPE"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-d-e-f-a-u-l-t_-s-l-a-c-k_-c-h-a-n-n-e-l/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / DEFAULT_SLACK_CHANNEL DEFAULT_SLACK_CHANNEL \u00b6 static val DEFAULT_SLACK_CHANNEL: String","title":" d e f a u l t  s l a c k  c h a n n e l"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-d-e-f-a-u-l-t_-s-l-a-c-k_-c-h-a-n-n-e-l/#default_slack_channel","text":"static val DEFAULT_SLACK_CHANNEL: String","title":"DEFAULT_SLACK_CHANNEL"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-init-/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / <init> <init> \u00b6 ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String ) ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String , unknownFields: ByteString)","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-init-/#init","text":"ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String ) ConfigureServiceRequest(backfills: MutableList < BackfillData >, connector_type: String , connector_extra_data: String , slack_channel: String , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/backfills/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / backfills backfills \u00b6 val backfills: MutableList < BackfillData > List of all available backfills in this service","title":"Backfills"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/backfills/#backfills","text":"val backfills: MutableList < BackfillData > List of all available backfills in this service","title":"backfills"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/connector_extra_data/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / connector_extra_data connector_extra_data \u00b6 val connector_extra_data: String Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"}","title":"Connector extra data"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/connector_extra_data/#connector_extra_data","text":"val connector_extra_data: String Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"}","title":"connector_extra_data"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/connector_type/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / connector_type connector_type \u00b6 val connector_type: String This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase).","title":"Connector type"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/connector_type/#connector_type","text":"val connector_type: String This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase).","title":"connector_type"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/equals/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/hash-code/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/new-builder/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/slack_channel/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / slack_channel slack_channel \u00b6 val slack_channel: String","title":"Slack channel"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/slack_channel/#slack_channel","text":"val slack_channel: String","title":"slack_channel"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/to-string/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData BackfillData \u00b6 class BackfillData : Message< BackfillData , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< BackfillData , Builder > Constructors \u00b6 Name Summary <init> BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean ) BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< BackfillData > DEFAULT_DESCRIPTION static val DEFAULT_DESCRIPTION: String DEFAULT_NAME static val DEFAULT_NAME: String DEFAULT_REQUIRES_APPROVAL static val DEFAULT_REQUIRES_APPROVAL: Boolean DEFAULT_TYPE_CONSUMED static val DEFAULT_TYPE_CONSUMED: String DEFAULT_TYPE_PROVIDED static val DEFAULT_TYPE_PROVIDED: String description val description: String Description to show in the UI. name val name: String Identifies the backfill. Must be unique per service. parameters val parameters: MutableList < Parameter > Parameters the backfill will accept. An input is displayed in the UI for each parameter. requires_approval val requires_approval: Boolean If true the backfill will need approval from another user before it can be started. type_consumed val type_consumed: String type_provided val type_provided: String The class name of pipelined data, only set if backfill supports pipelining. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/#backfilldata","text":"class BackfillData : Message< BackfillData , Builder >","title":"BackfillData"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/#types","text":"Name Summary Builder class Builder : Builder< BackfillData , Builder >","title":"Types"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/#constructors","text":"Name Summary <init> BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean ) BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< BackfillData > DEFAULT_DESCRIPTION static val DEFAULT_DESCRIPTION: String DEFAULT_NAME static val DEFAULT_NAME: String DEFAULT_REQUIRES_APPROVAL static val DEFAULT_REQUIRES_APPROVAL: Boolean DEFAULT_TYPE_CONSUMED static val DEFAULT_TYPE_CONSUMED: String DEFAULT_TYPE_PROVIDED static val DEFAULT_TYPE_PROVIDED: String description val description: String Description to show in the UI. name val name: String Identifies the backfill. Must be unique per service. parameters val parameters: MutableList < Parameter > Parameters the backfill will accept. An input is displayed in the UI for each parameter. requires_approval val requires_approval: Boolean If true the backfill will need approval from another user before it can be started. type_consumed val type_consumed: String type_provided val type_provided: String The class name of pipelined data, only set if backfill supports pipelining.","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-a-d-a-p-t-e-r/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< BackfillData >","title":" a d a p t e r"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< BackfillData >","title":"ADAPTER"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-d-e-s-c-r-i-p-t-i-o-n/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / DEFAULT_DESCRIPTION DEFAULT_DESCRIPTION \u00b6 static val DEFAULT_DESCRIPTION: String","title":" d e f a u l t  d e s c r i p t i o n"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-d-e-s-c-r-i-p-t-i-o-n/#default_description","text":"static val DEFAULT_DESCRIPTION: String","title":"DEFAULT_DESCRIPTION"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-n-a-m-e/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / DEFAULT_NAME DEFAULT_NAME \u00b6 static val DEFAULT_NAME: String","title":" d e f a u l t  n a m e"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-n-a-m-e/#default_name","text":"static val DEFAULT_NAME: String","title":"DEFAULT_NAME"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-r-e-q-u-i-r-e-s_-a-p-p-r-o-v-a-l/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / DEFAULT_REQUIRES_APPROVAL DEFAULT_REQUIRES_APPROVAL \u00b6 static val DEFAULT_REQUIRES_APPROVAL: Boolean","title":" d e f a u l t  r e q u i r e s  a p p r o v a l"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-r-e-q-u-i-r-e-s_-a-p-p-r-o-v-a-l/#default_requires_approval","text":"static val DEFAULT_REQUIRES_APPROVAL: Boolean","title":"DEFAULT_REQUIRES_APPROVAL"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-t-y-p-e_-c-o-n-s-u-m-e-d/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / DEFAULT_TYPE_CONSUMED DEFAULT_TYPE_CONSUMED \u00b6 static val DEFAULT_TYPE_CONSUMED: String","title":" d e f a u l t  t y p e  c o n s u m e d"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-t-y-p-e_-c-o-n-s-u-m-e-d/#default_type_consumed","text":"static val DEFAULT_TYPE_CONSUMED: String","title":"DEFAULT_TYPE_CONSUMED"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-t-y-p-e_-p-r-o-v-i-d-e-d/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / DEFAULT_TYPE_PROVIDED DEFAULT_TYPE_PROVIDED \u00b6 static val DEFAULT_TYPE_PROVIDED: String","title":" d e f a u l t  t y p e  p r o v i d e d"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-d-e-f-a-u-l-t_-t-y-p-e_-p-r-o-v-i-d-e-d/#default_type_provided","text":"static val DEFAULT_TYPE_PROVIDED: String","title":"DEFAULT_TYPE_PROVIDED"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-init-/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / <init> <init> \u00b6 BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean ) BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean , unknownFields: ByteString)","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-init-/#init","text":"BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean ) BackfillData(name: String , description: String , parameters: MutableList < Parameter >, type_provided: String , type_consumed: String , requires_approval: Boolean , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/description/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / description description \u00b6 val description: String Description to show in the UI.","title":"Description"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/description/#description","text":"val description: String Description to show in the UI.","title":"description"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/equals/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/hash-code/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/name/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / name name \u00b6 val name: String Identifies the backfill. Must be unique per service.","title":"Name"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/name/#name","text":"val name: String Identifies the backfill. Must be unique per service.","title":"name"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/new-builder/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/parameters/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / parameters parameters \u00b6 val parameters: MutableList < Parameter > Parameters the backfill will accept. An input is displayed in the UI for each parameter.","title":"Parameters"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/parameters/#parameters","text":"val parameters: MutableList < Parameter > Parameters the backfill will accept. An input is displayed in the UI for each parameter.","title":"parameters"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/requires_approval/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / requires_approval requires_approval \u00b6 val requires_approval: Boolean If true the backfill will need approval from another user before it can be started.","title":"Requires approval"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/requires_approval/#requires_approval","text":"val requires_approval: Boolean If true the backfill will need approval from another user before it can be started.","title":"requires_approval"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/to-string/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/type_consumed/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / type_consumed type_consumed \u00b6 val type_consumed: String","title":"Type consumed"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/type_consumed/#type_consumed","text":"val type_consumed: String","title":"type_consumed"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/type_provided/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / type_provided type_provided \u00b6 val type_provided: String The class name of pipelined data, only set if backfill supports pipelining.","title":"Type provided"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/type_provided/#type_provided","text":"val type_provided: String The class name of pipelined data, only set if backfill supports pipelining.","title":"type_provided"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder Builder \u00b6 class Builder : Builder< BackfillData , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary description var description: String name var name: String parameters var parameters: MutableList < Parameter > requires_approval var requires_approval: Boolean type_consumed var type_consumed: String type_provided var type_provided: String Functions \u00b6 Name Summary build fun build(): BackfillData description fun description(description: String ): Builder Description to show in the UI. name fun name(name: String ): Builder Identifies the backfill. Must be unique per service. parameters fun parameters(parameters: MutableList < Parameter >): Builder Parameters the backfill will accept. An input is displayed in the UI for each parameter. requires_approval fun requires_approval(requires_approval: Boolean ): Builder If true the backfill will need approval from another user before it can be started. type_consumed fun type_consumed(type_consumed: String ): Builder type_provided fun type_provided(type_provided: String ): Builder The class name of pipelined data, only set if backfill supports pipelining.","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/#builder","text":"class Builder : Builder< BackfillData , Builder >","title":"Builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/#properties","text":"Name Summary description var description: String name var name: String parameters var parameters: MutableList < Parameter > requires_approval var requires_approval: Boolean type_consumed var type_consumed: String type_provided var type_provided: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/#functions","text":"Name Summary build fun build(): BackfillData description fun description(description: String ): Builder Description to show in the UI. name fun name(name: String ): Builder Identifies the backfill. Must be unique per service. parameters fun parameters(parameters: MutableList < Parameter >): Builder Parameters the backfill will accept. An input is displayed in the UI for each parameter. requires_approval fun requires_approval(requires_approval: Boolean ): Builder If true the backfill will need approval from another user before it can be started. type_consumed fun type_consumed(type_consumed: String ): Builder type_provided fun type_provided(type_provided: String ): Builder The class name of pipelined data, only set if backfill supports pipelining.","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/-init-/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/build/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / build build \u00b6 fun build(): BackfillData","title":"Build"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/build/#build","text":"fun build(): BackfillData","title":"build"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/description/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / description description \u00b6 fun description(description: String ): Builder Description to show in the UI. var description: String","title":"Description"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/description/#description","text":"fun description(description: String ): Builder Description to show in the UI. var description: String","title":"description"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/name/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / name name \u00b6 fun name(name: String ): Builder Identifies the backfill. Must be unique per service. var name: String","title":"Name"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/name/#name","text":"fun name(name: String ): Builder Identifies the backfill. Must be unique per service. var name: String","title":"name"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/parameters/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / parameters parameters \u00b6 fun parameters(parameters: MutableList < Parameter >): Builder Parameters the backfill will accept. An input is displayed in the UI for each parameter. var parameters: MutableList < Parameter >","title":"Parameters"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/parameters/#parameters","text":"fun parameters(parameters: MutableList < Parameter >): Builder Parameters the backfill will accept. An input is displayed in the UI for each parameter. var parameters: MutableList < Parameter >","title":"parameters"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/requires_approval/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / requires_approval requires_approval \u00b6 fun requires_approval(requires_approval: Boolean ): Builder If true the backfill will need approval from another user before it can be started. var requires_approval: Boolean","title":"Requires approval"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/requires_approval/#requires_approval","text":"fun requires_approval(requires_approval: Boolean ): Builder If true the backfill will need approval from another user before it can be started. var requires_approval: Boolean","title":"requires_approval"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/type_consumed/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / type_consumed type_consumed \u00b6 fun type_consumed(type_consumed: String ): Builder var type_consumed: String","title":"Type consumed"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/type_consumed/#type_consumed","text":"fun type_consumed(type_consumed: String ): Builder var type_consumed: String","title":"type_consumed"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/type_provided/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / BackfillData / Builder / type_provided type_provided \u00b6 fun type_provided(type_provided: String ): Builder The class name of pipelined data, only set if backfill supports pipelining. var type_provided: String","title":"Type provided"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-backfill-data/-builder/type_provided/#type_provided","text":"fun type_provided(type_provided: String ): Builder The class name of pipelined data, only set if backfill supports pipelining. var type_provided: String","title":"type_provided"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder Builder \u00b6 class Builder : Builder< ConfigureServiceRequest , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary backfills var backfills: MutableList < BackfillData > connector_extra_data var connector_extra_data: String connector_type var connector_type: String slack_channel var slack_channel: String Functions \u00b6 Name Summary backfills fun backfills(backfills: MutableList < BackfillData >): Builder List of all available backfills in this service build fun build(): ConfigureServiceRequest connector_extra_data fun connector_extra_data(connector_extra_data: String ): Builder Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"} connector_type fun connector_type(connector_type: String ): Builder This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase). slack_channel fun slack_channel(slack_channel: String ): Builder","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/#builder","text":"class Builder : Builder< ConfigureServiceRequest , Builder >","title":"Builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/#properties","text":"Name Summary backfills var backfills: MutableList < BackfillData > connector_extra_data var connector_extra_data: String connector_type var connector_type: String slack_channel var slack_channel: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/#functions","text":"Name Summary backfills fun backfills(backfills: MutableList < BackfillData >): Builder List of all available backfills in this service build fun build(): ConfigureServiceRequest connector_extra_data fun connector_extra_data(connector_extra_data: String ): Builder Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"} connector_type fun connector_type(connector_type: String ): Builder This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase). slack_channel fun slack_channel(slack_channel: String ): Builder","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/-init-/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/backfills/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder / backfills backfills \u00b6 fun backfills(backfills: MutableList < BackfillData >): Builder List of all available backfills in this service var backfills: MutableList < BackfillData >","title":"Backfills"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/backfills/#backfills","text":"fun backfills(backfills: MutableList < BackfillData >): Builder List of all available backfills in this service var backfills: MutableList < BackfillData >","title":"backfills"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/build/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder / build build \u00b6 fun build(): ConfigureServiceRequest","title":"Build"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/build/#build","text":"fun build(): ConfigureServiceRequest","title":"build"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/connector_extra_data/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder / connector_extra_data connector_extra_data \u00b6 fun connector_extra_data(connector_extra_data: String ): Builder Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"} var connector_extra_data: String","title":"Connector extra data"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/connector_extra_data/#connector_extra_data","text":"fun connector_extra_data(connector_extra_data: String ): Builder Extra data that is passed through to the connector corresponding to connector_type. Suggested encoding is JSON. For example ENVOY type could have the cluster type as extra data: e.g.: {\"cluster_type\": \"production-jobs\"} var connector_extra_data: String","title":"connector_extra_data"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/connector_type/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder / connector_type connector_type \u00b6 fun connector_type(connector_type: String ): Builder This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase). var connector_type: String","title":"Connector type"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/connector_type/#connector_type","text":"fun connector_type(connector_type: String ): Builder This isn\u2019t encoded as protobuf so connector implementations can be added without modifying protos (thus avoiding modifying the core backfila codebase). var connector_type: String","title":"connector_type"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/slack_channel/","text":"client / app.cash.backfila.protos.service / ConfigureServiceRequest / Builder / slack_channel slack_channel \u00b6 fun slack_channel(slack_channel: String ): Builder var slack_channel: String","title":"Slack channel"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-request/-builder/slack_channel/#slack_channel","text":"fun slack_channel(slack_channel: String ): Builder var slack_channel: String","title":"slack_channel"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse ConfigureServiceResponse \u00b6 class ConfigureServiceResponse : Message< ConfigureServiceResponse , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< ConfigureServiceResponse , Builder > Constructors \u00b6 Name Summary <init> ConfigureServiceResponse() ConfigureServiceResponse(unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< ConfigureServiceResponse > Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/#configureserviceresponse","text":"class ConfigureServiceResponse : Message< ConfigureServiceResponse , Builder >","title":"ConfigureServiceResponse"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/#types","text":"Name Summary Builder class Builder : Builder< ConfigureServiceResponse , Builder >","title":"Types"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/#constructors","text":"Name Summary <init> ConfigureServiceResponse() ConfigureServiceResponse(unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< ConfigureServiceResponse >","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-a-d-a-p-t-e-r/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< ConfigureServiceResponse >","title":" a d a p t e r"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< ConfigureServiceResponse >","title":"ADAPTER"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-init-/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / <init> <init> \u00b6 ConfigureServiceResponse() ConfigureServiceResponse(unknownFields: ByteString)","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-init-/#init","text":"ConfigureServiceResponse() ConfigureServiceResponse(unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/equals/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/hash-code/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/new-builder/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/to-string/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / Builder Builder \u00b6 class Builder : Builder< ConfigureServiceResponse , Builder > Constructors \u00b6 Name Summary <init> Builder() Functions \u00b6 Name Summary build fun build(): ConfigureServiceResponse","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/#builder","text":"class Builder : Builder< ConfigureServiceResponse , Builder >","title":"Builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/#functions","text":"Name Summary build fun build(): ConfigureServiceResponse","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/-init-/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/build/","text":"client / app.cash.backfila.protos.service / ConfigureServiceResponse / Builder / build build \u00b6 fun build(): ConfigureServiceResponse","title":"Build"},{"location":"0.x/client/app.cash.backfila.protos.service/-configure-service-response/-builder/build/#build","text":"fun build(): ConfigureServiceResponse","title":"build"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/","text":"client / app.cash.backfila.protos.service / Parameter Parameter \u00b6 class Parameter : Message< Parameter , Builder > In this file: APIs that the service provides to the client. Types \u00b6 Name Summary Builder class Builder : Builder< Parameter , Builder > Constructors \u00b6 Name Summary <init> Parameter(name: String , description: String ) Parameter(name: String , description: String , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Parameter > DEFAULT_DESCRIPTION static val DEFAULT_DESCRIPTION: String DEFAULT_NAME static val DEFAULT_NAME: String description val description: String Description to show in the UI. name val name: String Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/#parameter","text":"class Parameter : Message< Parameter , Builder > In this file: APIs that the service provides to the client.","title":"Parameter"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/#types","text":"Name Summary Builder class Builder : Builder< Parameter , Builder >","title":"Types"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/#constructors","text":"Name Summary <init> Parameter(name: String , description: String ) Parameter(name: String , description: String , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Parameter > DEFAULT_DESCRIPTION static val DEFAULT_DESCRIPTION: String DEFAULT_NAME static val DEFAULT_NAME: String description val description: String Description to show in the UI. name val name: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-a-d-a-p-t-e-r/","text":"client / app.cash.backfila.protos.service / Parameter / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< Parameter >","title":" a d a p t e r"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< Parameter >","title":"ADAPTER"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-d-e-f-a-u-l-t_-d-e-s-c-r-i-p-t-i-o-n/","text":"client / app.cash.backfila.protos.service / Parameter / DEFAULT_DESCRIPTION DEFAULT_DESCRIPTION \u00b6 static val DEFAULT_DESCRIPTION: String","title":" d e f a u l t  d e s c r i p t i o n"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-d-e-f-a-u-l-t_-d-e-s-c-r-i-p-t-i-o-n/#default_description","text":"static val DEFAULT_DESCRIPTION: String","title":"DEFAULT_DESCRIPTION"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-d-e-f-a-u-l-t_-n-a-m-e/","text":"client / app.cash.backfila.protos.service / Parameter / DEFAULT_NAME DEFAULT_NAME \u00b6 static val DEFAULT_NAME: String","title":" d e f a u l t  n a m e"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-d-e-f-a-u-l-t_-n-a-m-e/#default_name","text":"static val DEFAULT_NAME: String","title":"DEFAULT_NAME"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-init-/","text":"client / app.cash.backfila.protos.service / Parameter / <init> <init> \u00b6 Parameter(name: String , description: String ) Parameter(name: String , description: String , unknownFields: ByteString)","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-init-/#init","text":"Parameter(name: String , description: String ) Parameter(name: String , description: String , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/description/","text":"client / app.cash.backfila.protos.service / Parameter / description description \u00b6 val description: String Description to show in the UI.","title":"Description"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/description/#description","text":"val description: String Description to show in the UI.","title":"description"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/equals/","text":"client / app.cash.backfila.protos.service / Parameter / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/hash-code/","text":"client / app.cash.backfila.protos.service / Parameter / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/name/","text":"client / app.cash.backfila.protos.service / Parameter / name name \u00b6 val name: String","title":"Name"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/name/#name","text":"val name: String","title":"name"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/new-builder/","text":"client / app.cash.backfila.protos.service / Parameter / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/to-string/","text":"client / app.cash.backfila.protos.service / Parameter / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/","text":"client / app.cash.backfila.protos.service / Parameter / Builder Builder \u00b6 class Builder : Builder< Parameter , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary description var description: String name var name: String Functions \u00b6 Name Summary build fun build(): Parameter description fun description(description: String ): Builder Description to show in the UI. name fun name(name: String ): Builder","title":"Home"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/#builder","text":"class Builder : Builder< Parameter , Builder >","title":"Builder"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/#properties","text":"Name Summary description var description: String name var name: String","title":"Properties"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/#functions","text":"Name Summary build fun build(): Parameter description fun description(description: String ): Builder Description to show in the UI. name fun name(name: String ): Builder","title":"Functions"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/-init-/","text":"client / app.cash.backfila.protos.service / Parameter / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/build/","text":"client / app.cash.backfila.protos.service / Parameter / Builder / build build \u00b6 fun build(): Parameter","title":"Build"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/build/#build","text":"fun build(): Parameter","title":"build"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/description/","text":"client / app.cash.backfila.protos.service / Parameter / Builder / description description \u00b6 fun description(description: String ): Builder Description to show in the UI. var description: String","title":"Description"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/description/#description","text":"fun description(description: String ): Builder Description to show in the UI. var description: String","title":"description"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/name/","text":"client / app.cash.backfila.protos.service / Parameter / Builder / name name \u00b6 fun name(name: String ): Builder var name: String","title":"Name"},{"location":"0.x/client/app.cash.backfila.protos.service/-parameter/-builder/name/#name","text":"fun name(name: String ): Builder var name: String","title":"name"},{"location":"0.x/client-misk/","text":"client-misk Packages \u00b6 Name Summary app.cash.backfila.client.misk app.cash.backfila.protos.clientservice Index \u00b6 All Types","title":"client-service"},{"location":"0.x/client-misk/#packages","text":"Name Summary app.cash.backfila.client.misk app.cash.backfila.protos.clientservice","title":"Packages"},{"location":"0.x/client-misk/#index","text":"All Types","title":"Index"},{"location":"0.x/client-misk/alltypes/","text":"All Types \u00b6 Name Summary app.cash.backfila.client.misk.BackfilaClientConfig app.cash.backfila.client.misk.BackfilaClientModule app.cash.backfila.client.misk.Backfill app.cash.backfila.client.misk.ForBackfila app.cash.backfila.client.misk.GetNextBatchRangeAction app.cash.backfila.protos.clientservice.GetNextBatchRangeRequest app.cash.backfila.protos.clientservice.GetNextBatchRangeResponse app.cash.backfila.protos.clientservice.KeyRange In this file: APIs that backfila calls on the client service. Inclusive range of primary keys. Backfila will never make assumptions about the type of the primary key, these are passed around as tokens. app.cash.backfila.protos.clientservice.PipelinedData Pipelined data can be any format as long as both the consumer and provider agree on it. This structure is passed around from the source to the target unchanged. app.cash.backfila.protos.clientservice.PipelinedRecord app.cash.backfila.protos.clientservice.PrepareBackfillRequest app.cash.backfila.protos.clientservice.PrepareBackfillResponse app.cash.backfila.client.misk.RunBatchAction app.cash.backfila.protos.clientservice.RunBatchRequest app.cash.backfila.protos.clientservice.RunBatchResponse","title":"Home"},{"location":"0.x/client-misk/alltypes/#all-types","text":"Name Summary app.cash.backfila.client.misk.BackfilaClientConfig app.cash.backfila.client.misk.BackfilaClientModule app.cash.backfila.client.misk.Backfill app.cash.backfila.client.misk.ForBackfila app.cash.backfila.client.misk.GetNextBatchRangeAction app.cash.backfila.protos.clientservice.GetNextBatchRangeRequest app.cash.backfila.protos.clientservice.GetNextBatchRangeResponse app.cash.backfila.protos.clientservice.KeyRange In this file: APIs that backfila calls on the client service. Inclusive range of primary keys. Backfila will never make assumptions about the type of the primary key, these are passed around as tokens. app.cash.backfila.protos.clientservice.PipelinedData Pipelined data can be any format as long as both the consumer and provider agree on it. This structure is passed around from the source to the target unchanged. app.cash.backfila.protos.clientservice.PipelinedRecord app.cash.backfila.protos.clientservice.PrepareBackfillRequest app.cash.backfila.protos.clientservice.PrepareBackfillResponse app.cash.backfila.client.misk.RunBatchAction app.cash.backfila.protos.clientservice.RunBatchRequest app.cash.backfila.protos.clientservice.RunBatchResponse","title":"All Types"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/","text":"client-misk / app.cash.backfila.client.misk Package app.cash.backfila.client.misk \u00b6 Types \u00b6 Name Summary BackfilaClientConfig data class BackfilaClientConfig BackfilaClientModule class BackfilaClientModule : KAbstractModule Backfill interface Backfill GetNextBatchRangeAction class GetNextBatchRangeAction : WebAction RunBatchAction class RunBatchAction : WebAction Annotations \u00b6 Name Summary ForBackfila annotation class ForBackfila","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/#package-appcashbackfilaclientmisk","text":"","title":"Package app.cash.backfila.client.misk"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/#types","text":"Name Summary BackfilaClientConfig data class BackfilaClientConfig BackfilaClientModule class BackfilaClientModule : KAbstractModule Backfill interface Backfill GetNextBatchRangeAction class GetNextBatchRangeAction : WebAction RunBatchAction class RunBatchAction : WebAction","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/#annotations","text":"Name Summary ForBackfila annotation class ForBackfila","title":"Annotations"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientConfig BackfilaClientConfig \u00b6 data class BackfilaClientConfig Constructors \u00b6 Name Summary <init> BackfilaClientConfig(slack_channel: String ?) Properties \u00b6 Name Summary slack_channel val slack_channel: String ?","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/#backfilaclientconfig","text":"data class BackfilaClientConfig","title":"BackfilaClientConfig"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/#constructors","text":"Name Summary <init> BackfilaClientConfig(slack_channel: String ?)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/#properties","text":"Name Summary slack_channel val slack_channel: String ?","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/-init-/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientConfig / <init> <init> \u00b6 BackfilaClientConfig(slack_channel: String ?)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/-init-/#init","text":"BackfilaClientConfig(slack_channel: String ?)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/slack_channel/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientConfig / slack_channel slack_channel \u00b6 val slack_channel: String ?","title":"Slack channel"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-config/slack_channel/#slack_channel","text":"val slack_channel: String ?","title":"slack_channel"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientModule BackfilaClientModule \u00b6 class BackfilaClientModule : KAbstractModule Constructors \u00b6 Name Summary <init> BackfilaClientModule(config: BackfilaClientConfig , backfills: List < Class <out Backfill >>) Functions \u00b6 Name Summary configure fun configure(): Unit wireRetrofitBuilder fun wireRetrofitBuilder(): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/#backfilaclientmodule","text":"class BackfilaClientModule : KAbstractModule","title":"BackfilaClientModule"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/#constructors","text":"Name Summary <init> BackfilaClientModule(config: BackfilaClientConfig , backfills: List < Class <out Backfill >>)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/#functions","text":"Name Summary configure fun configure(): Unit wireRetrofitBuilder fun wireRetrofitBuilder(): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/-init-/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientModule / <init> <init> \u00b6 BackfilaClientModule(config: BackfilaClientConfig , backfills: List < Class <out Backfill >>)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/-init-/#init","text":"BackfilaClientModule(config: BackfilaClientConfig , backfills: List < Class <out Backfill >>)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/configure/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"Configure"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/configure/#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/wire-retrofit-builder/","text":"client-misk / app.cash.backfila.client.misk / BackfilaClientModule / wireRetrofitBuilder wireRetrofitBuilder \u00b6 @Provides @Named(\"wire\") fun wireRetrofitBuilder(): Builder","title":"Wire retrofit builder"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfila-client-module/wire-retrofit-builder/#wireretrofitbuilder","text":"@Provides @Named(\"wire\") fun wireRetrofitBuilder(): Builder","title":"wireRetrofitBuilder"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/","text":"client-misk / app.cash.backfila.client.misk / Backfill Backfill \u00b6 interface Backfill Functions \u00b6 Name Summary getNextBatchRange abstract fun getNextBatchRange(request: GetNextBatchRangeRequest ): GetNextBatchRangeResponse prepareBackfill abstract fun prepareBackfill(request: PrepareBackfillRequest ): PrepareBackfillResponse runBatch abstract fun runBatch(request: RunBatchRequest ): RunBatchResponse","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/#backfill","text":"interface Backfill","title":"Backfill"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/#functions","text":"Name Summary getNextBatchRange abstract fun getNextBatchRange(request: GetNextBatchRangeRequest ): GetNextBatchRangeResponse prepareBackfill abstract fun prepareBackfill(request: PrepareBackfillRequest ): PrepareBackfillResponse runBatch abstract fun runBatch(request: RunBatchRequest ): RunBatchResponse","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/get-next-batch-range/","text":"client-misk / app.cash.backfila.client.misk / Backfill / getNextBatchRange getNextBatchRange \u00b6 abstract fun getNextBatchRange(request: GetNextBatchRangeRequest ): GetNextBatchRangeResponse","title":"Get next batch range"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/get-next-batch-range/#getnextbatchrange","text":"abstract fun getNextBatchRange(request: GetNextBatchRangeRequest ): GetNextBatchRangeResponse","title":"getNextBatchRange"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/prepare-backfill/","text":"client-misk / app.cash.backfila.client.misk / Backfill / prepareBackfill prepareBackfill \u00b6 abstract fun prepareBackfill(request: PrepareBackfillRequest ): PrepareBackfillResponse","title":"Prepare backfill"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/prepare-backfill/#preparebackfill","text":"abstract fun prepareBackfill(request: PrepareBackfillRequest ): PrepareBackfillResponse","title":"prepareBackfill"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/run-batch/","text":"client-misk / app.cash.backfila.client.misk / Backfill / runBatch runBatch \u00b6 abstract fun runBatch(request: RunBatchRequest ): RunBatchResponse","title":"Run batch"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-backfill/run-batch/#runbatch","text":"abstract fun runBatch(request: RunBatchRequest ): RunBatchResponse","title":"runBatch"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-for-backfila/","text":"client-misk / app.cash.backfila.client.misk / ForBackfila ForBackfila \u00b6 annotation class ForBackfila Constructors \u00b6 Name Summary <init> ForBackfila()","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-for-backfila/#forbackfila","text":"annotation class ForBackfila","title":"ForBackfila"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-for-backfila/#constructors","text":"Name Summary <init> ForBackfila()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-for-backfila/-init-/","text":"client-misk / app.cash.backfila.client.misk / ForBackfila / <init> <init> \u00b6 ForBackfila()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-for-backfila/-init-/#init","text":"ForBackfila()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/","text":"client-misk / app.cash.backfila.client.misk / GetNextBatchRangeAction GetNextBatchRangeAction \u00b6 class GetNextBatchRangeAction : WebAction Constructors \u00b6 Name Summary <init> GetNextBatchRangeAction() Functions \u00b6 Name Summary getNextBatchRange fun getNextBatchRange(): Unit","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/#getnextbatchrangeaction","text":"class GetNextBatchRangeAction : WebAction","title":"GetNextBatchRangeAction"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/#constructors","text":"Name Summary <init> GetNextBatchRangeAction()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/#functions","text":"Name Summary getNextBatchRange fun getNextBatchRange(): Unit","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/-init-/","text":"client-misk / app.cash.backfila.client.misk / GetNextBatchRangeAction / <init> <init> \u00b6 GetNextBatchRangeAction()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/-init-/#init","text":"GetNextBatchRangeAction()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/get-next-batch-range/","text":"client-misk / app.cash.backfila.client.misk / GetNextBatchRangeAction / getNextBatchRange getNextBatchRange \u00b6 fun getNextBatchRange(): Unit","title":"Get next batch range"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-get-next-batch-range-action/get-next-batch-range/#getnextbatchrange","text":"fun getNextBatchRange(): Unit","title":"getNextBatchRange"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/","text":"client-misk / app.cash.backfila.client.misk / RunBatchAction RunBatchAction \u00b6 class RunBatchAction : WebAction Constructors \u00b6 Name Summary <init> RunBatchAction() Functions \u00b6 Name Summary runBatch fun runBatch(): Unit","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/#runbatchaction","text":"class RunBatchAction : WebAction","title":"RunBatchAction"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/#constructors","text":"Name Summary <init> RunBatchAction()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/#functions","text":"Name Summary runBatch fun runBatch(): Unit","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/-init-/","text":"client-misk / app.cash.backfila.client.misk / RunBatchAction / <init> <init> \u00b6 RunBatchAction()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/-init-/#init","text":"RunBatchAction()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/run-batch/","text":"client-misk / app.cash.backfila.client.misk / RunBatchAction / runBatch runBatch \u00b6 fun runBatch(): Unit","title":"Run batch"},{"location":"0.x/client-misk/app.cash.backfila.client.misk/-run-batch-action/run-batch/#runbatch","text":"fun runBatch(): Unit","title":"runBatch"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/","text":"client-misk / app.cash.backfila.protos.clientservice Package app.cash.backfila.protos.clientservice \u00b6 Types \u00b6 Name Summary GetNextBatchRangeRequest class GetNextBatchRangeRequest : Message< GetNextBatchRangeRequest , Builder > GetNextBatchRangeResponse class GetNextBatchRangeResponse : Message< GetNextBatchRangeResponse , Builder > KeyRange class KeyRange : Message< KeyRange , Builder > In this file: APIs that backfila calls on the client service. Inclusive range of primary keys. Backfila will never make assumptions about the type of the primary key, these are passed around as tokens. PipelinedData class PipelinedData : Message< PipelinedData , Builder > Pipelined data can be any format as long as both the consumer and provider agree on it. This structure is passed around from the source to the target unchanged. PipelinedRecord class PipelinedRecord : Message< PipelinedRecord , Builder > PrepareBackfillRequest class PrepareBackfillRequest : Message< PrepareBackfillRequest , Builder > PrepareBackfillResponse class PrepareBackfillResponse : Message< PrepareBackfillResponse , Builder > RunBatchRequest class RunBatchRequest : Message< RunBatchRequest , Builder > RunBatchResponse class RunBatchResponse : Message< RunBatchResponse , Builder >","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/#package-appcashbackfilaprotosclientservice","text":"","title":"Package app.cash.backfila.protos.clientservice"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/#types","text":"Name Summary GetNextBatchRangeRequest class GetNextBatchRangeRequest : Message< GetNextBatchRangeRequest , Builder > GetNextBatchRangeResponse class GetNextBatchRangeResponse : Message< GetNextBatchRangeResponse , Builder > KeyRange class KeyRange : Message< KeyRange , Builder > In this file: APIs that backfila calls on the client service. Inclusive range of primary keys. Backfila will never make assumptions about the type of the primary key, these are passed around as tokens. PipelinedData class PipelinedData : Message< PipelinedData , Builder > Pipelined data can be any format as long as both the consumer and provider agree on it. This structure is passed around from the source to the target unchanged. PipelinedRecord class PipelinedRecord : Message< PipelinedRecord , Builder > PrepareBackfillRequest class PrepareBackfillRequest : Message< PrepareBackfillRequest , Builder > PrepareBackfillResponse class PrepareBackfillResponse : Message< PrepareBackfillResponse , Builder > RunBatchRequest class RunBatchRequest : Message< RunBatchRequest , Builder > RunBatchResponse class RunBatchResponse : Message< RunBatchResponse , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest GetNextBatchRangeRequest \u00b6 class GetNextBatchRangeRequest : Message< GetNextBatchRangeRequest , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< GetNextBatchRangeRequest , Builder > Constructors \u00b6 Name Summary <init> GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean ) GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetNextBatchRangeRequest > DEFAULT_BACKFILL_ID static val DEFAULT_BACKFILL_ID: String DEFAULT_BACKFILL_NAME static val DEFAULT_BACKFILL_NAME: String DEFAULT_BATCH_SIZE static val DEFAULT_BATCH_SIZE: Long DEFAULT_COMPUTE_COUNT_LIMIT static val DEFAULT_COMPUTE_COUNT_LIMIT: Long DEFAULT_COMPUTE_TIME_LIMIT_MS static val DEFAULT_COMPUTE_TIME_LIMIT_MS: Long DEFAULT_DRY_RUN static val DEFAULT_DRY_RUN: Boolean DEFAULT_INSTANCE_NAME static val DEFAULT_INSTANCE_NAME: String DEFAULT_PRECOMPUTING static val DEFAULT_PRECOMPUTING: Boolean DEFAULT_PREVIOUS_END_KEY static val DEFAULT_PREVIOUS_END_KEY: ByteString DEFAULT_SCAN_SIZE static val DEFAULT_SCAN_SIZE: Long backfill_id val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name val backfill_name: String backfill_range val backfill_range: KeyRange The range of the whole backfill. This determines where the first batch starts and the last batch ends. batch_size val batch_size: Long Max number of matching records to return in a batch range. compute_count_limit val compute_count_limit: Long Compute as many batches as possible until this many results. compute_time_limit_ms val compute_time_limit_ms: Long Compute as many batches as possible until this duration elapses. dry_run val dry_run: Boolean instance_name val instance_name: String parameters val parameters: MutableMap < String , ByteString> User provided parameters at creation. The values are immutable for the life of the backfill. precomputing val precomputing: Boolean Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case. previous_end_key val previous_end_key: ByteString End key of the previous computed batch. Can be null for the first call. scan_size val scan_size: Long Max number of records to scan when computing a batch range. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/#getnextbatchrangerequest","text":"class GetNextBatchRangeRequest : Message< GetNextBatchRangeRequest , Builder >","title":"GetNextBatchRangeRequest"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/#types","text":"Name Summary Builder class Builder : Builder< GetNextBatchRangeRequest , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/#constructors","text":"Name Summary <init> GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean ) GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetNextBatchRangeRequest > DEFAULT_BACKFILL_ID static val DEFAULT_BACKFILL_ID: String DEFAULT_BACKFILL_NAME static val DEFAULT_BACKFILL_NAME: String DEFAULT_BATCH_SIZE static val DEFAULT_BATCH_SIZE: Long DEFAULT_COMPUTE_COUNT_LIMIT static val DEFAULT_COMPUTE_COUNT_LIMIT: Long DEFAULT_COMPUTE_TIME_LIMIT_MS static val DEFAULT_COMPUTE_TIME_LIMIT_MS: Long DEFAULT_DRY_RUN static val DEFAULT_DRY_RUN: Boolean DEFAULT_INSTANCE_NAME static val DEFAULT_INSTANCE_NAME: String DEFAULT_PRECOMPUTING static val DEFAULT_PRECOMPUTING: Boolean DEFAULT_PREVIOUS_END_KEY static val DEFAULT_PREVIOUS_END_KEY: ByteString DEFAULT_SCAN_SIZE static val DEFAULT_SCAN_SIZE: Long backfill_id val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name val backfill_name: String backfill_range val backfill_range: KeyRange The range of the whole backfill. This determines where the first batch starts and the last batch ends. batch_size val batch_size: Long Max number of matching records to return in a batch range. compute_count_limit val compute_count_limit: Long Compute as many batches as possible until this many results. compute_time_limit_ms val compute_time_limit_ms: Long Compute as many batches as possible until this duration elapses. dry_run val dry_run: Boolean instance_name val instance_name: String parameters val parameters: MutableMap < String , ByteString> User provided parameters at creation. The values are immutable for the life of the backfill. precomputing val precomputing: Boolean Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case. previous_end_key val previous_end_key: ByteString End key of the previous computed batch. Can be null for the first call. scan_size val scan_size: Long Max number of records to scan when computing a batch range.","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< GetNextBatchRangeRequest >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< GetNextBatchRangeRequest >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-i-d/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_BACKFILL_ID DEFAULT_BACKFILL_ID \u00b6 static val DEFAULT_BACKFILL_ID: String","title":" d e f a u l t  b a c k f i l l  i d"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-i-d/#default_backfill_id","text":"static val DEFAULT_BACKFILL_ID: String","title":"DEFAULT_BACKFILL_ID"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-n-a-m-e/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_BACKFILL_NAME DEFAULT_BACKFILL_NAME \u00b6 static val DEFAULT_BACKFILL_NAME: String","title":" d e f a u l t  b a c k f i l l  n a m e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-n-a-m-e/#default_backfill_name","text":"static val DEFAULT_BACKFILL_NAME: String","title":"DEFAULT_BACKFILL_NAME"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-b-a-t-c-h_-s-i-z-e/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_BATCH_SIZE DEFAULT_BATCH_SIZE \u00b6 static val DEFAULT_BATCH_SIZE: Long","title":" d e f a u l t  b a t c h  s i z e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-b-a-t-c-h_-s-i-z-e/#default_batch_size","text":"static val DEFAULT_BATCH_SIZE: Long","title":"DEFAULT_BATCH_SIZE"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-c-o-m-p-u-t-e_-c-o-u-n-t_-l-i-m-i-t/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_COMPUTE_COUNT_LIMIT DEFAULT_COMPUTE_COUNT_LIMIT \u00b6 static val DEFAULT_COMPUTE_COUNT_LIMIT: Long","title":" d e f a u l t  c o m p u t e  c o u n t  l i m i t"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-c-o-m-p-u-t-e_-c-o-u-n-t_-l-i-m-i-t/#default_compute_count_limit","text":"static val DEFAULT_COMPUTE_COUNT_LIMIT: Long","title":"DEFAULT_COMPUTE_COUNT_LIMIT"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-c-o-m-p-u-t-e_-t-i-m-e_-l-i-m-i-t_-m-s/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_COMPUTE_TIME_LIMIT_MS DEFAULT_COMPUTE_TIME_LIMIT_MS \u00b6 static val DEFAULT_COMPUTE_TIME_LIMIT_MS: Long","title":" d e f a u l t  c o m p u t e  t i m e  l i m i t  m s"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-c-o-m-p-u-t-e_-t-i-m-e_-l-i-m-i-t_-m-s/#default_compute_time_limit_ms","text":"static val DEFAULT_COMPUTE_TIME_LIMIT_MS: Long","title":"DEFAULT_COMPUTE_TIME_LIMIT_MS"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-d-r-y_-r-u-n/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_DRY_RUN DEFAULT_DRY_RUN \u00b6 static val DEFAULT_DRY_RUN: Boolean","title":" d e f a u l t  d r y  r u n"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-d-r-y_-r-u-n/#default_dry_run","text":"static val DEFAULT_DRY_RUN: Boolean","title":"DEFAULT_DRY_RUN"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-i-n-s-t-a-n-c-e_-n-a-m-e/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_INSTANCE_NAME DEFAULT_INSTANCE_NAME \u00b6 static val DEFAULT_INSTANCE_NAME: String","title":" d e f a u l t  i n s t a n c e  n a m e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-i-n-s-t-a-n-c-e_-n-a-m-e/#default_instance_name","text":"static val DEFAULT_INSTANCE_NAME: String","title":"DEFAULT_INSTANCE_NAME"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-p-r-e-c-o-m-p-u-t-i-n-g/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_PRECOMPUTING DEFAULT_PRECOMPUTING \u00b6 static val DEFAULT_PRECOMPUTING: Boolean","title":" d e f a u l t  p r e c o m p u t i n g"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-p-r-e-c-o-m-p-u-t-i-n-g/#default_precomputing","text":"static val DEFAULT_PRECOMPUTING: Boolean","title":"DEFAULT_PRECOMPUTING"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-p-r-e-v-i-o-u-s_-e-n-d_-k-e-y/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_PREVIOUS_END_KEY DEFAULT_PREVIOUS_END_KEY \u00b6 static val DEFAULT_PREVIOUS_END_KEY: ByteString","title":" d e f a u l t  p r e v i o u s  e n d  k e y"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-p-r-e-v-i-o-u-s_-e-n-d_-k-e-y/#default_previous_end_key","text":"static val DEFAULT_PREVIOUS_END_KEY: ByteString","title":"DEFAULT_PREVIOUS_END_KEY"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-s-c-a-n_-s-i-z-e/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / DEFAULT_SCAN_SIZE DEFAULT_SCAN_SIZE \u00b6 static val DEFAULT_SCAN_SIZE: Long","title":" d e f a u l t  s c a n  s i z e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-d-e-f-a-u-l-t_-s-c-a-n_-s-i-z-e/#default_scan_size","text":"static val DEFAULT_SCAN_SIZE: Long","title":"DEFAULT_SCAN_SIZE"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / <init> <init> \u00b6 GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean ) GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean , unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-init-/#init","text":"GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean ) GetNextBatchRangeRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_size: Long , scan_size: Long , previous_end_key: ByteString, backfill_range: KeyRange , parameters: MutableMap < String , ByteString>, compute_time_limit_ms: Long , compute_count_limit: Long , dry_run: Boolean , precomputing: Boolean , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/backfill_id/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / backfill_id backfill_id \u00b6 val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation.","title":"Backfill id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/backfill_id/#backfill_id","text":"val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation.","title":"backfill_id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/backfill_name/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / backfill_name backfill_name \u00b6 val backfill_name: String","title":"Backfill name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/backfill_name/#backfill_name","text":"val backfill_name: String","title":"backfill_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/backfill_range/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / backfill_range backfill_range \u00b6 val backfill_range: KeyRange The range of the whole backfill. This determines where the first batch starts and the last batch ends.","title":"Backfill range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/backfill_range/#backfill_range","text":"val backfill_range: KeyRange The range of the whole backfill. This determines where the first batch starts and the last batch ends.","title":"backfill_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/batch_size/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / batch_size batch_size \u00b6 val batch_size: Long Max number of matching records to return in a batch range.","title":"Batch size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/batch_size/#batch_size","text":"val batch_size: Long Max number of matching records to return in a batch range.","title":"batch_size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/compute_count_limit/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / compute_count_limit compute_count_limit \u00b6 val compute_count_limit: Long Compute as many batches as possible until this many results.","title":"Compute count limit"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/compute_count_limit/#compute_count_limit","text":"val compute_count_limit: Long Compute as many batches as possible until this many results.","title":"compute_count_limit"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/compute_time_limit_ms/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / compute_time_limit_ms compute_time_limit_ms \u00b6 val compute_time_limit_ms: Long Compute as many batches as possible until this duration elapses.","title":"Compute time limit ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/compute_time_limit_ms/#compute_time_limit_ms","text":"val compute_time_limit_ms: Long Compute as many batches as possible until this duration elapses.","title":"compute_time_limit_ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/dry_run/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / dry_run dry_run \u00b6 val dry_run: Boolean","title":"Dry run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/dry_run/#dry_run","text":"val dry_run: Boolean","title":"dry_run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/instance_name/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / instance_name instance_name \u00b6 val instance_name: String","title":"Instance name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/instance_name/#instance_name","text":"val instance_name: String","title":"instance_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/parameters/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / parameters parameters \u00b6 val parameters: MutableMap < String , ByteString> User provided parameters at creation. The values are immutable for the life of the backfill.","title":"Parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/parameters/#parameters","text":"val parameters: MutableMap < String , ByteString> User provided parameters at creation. The values are immutable for the life of the backfill.","title":"parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/precomputing/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / precomputing precomputing \u00b6 val precomputing: Boolean Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case.","title":"Precomputing"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/precomputing/#precomputing","text":"val precomputing: Boolean Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case.","title":"precomputing"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/previous_end_key/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / previous_end_key previous_end_key \u00b6 val previous_end_key: ByteString End key of the previous computed batch. Can be null for the first call.","title":"Previous end key"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/previous_end_key/#previous_end_key","text":"val previous_end_key: ByteString End key of the previous computed batch. Can be null for the first call.","title":"previous_end_key"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/scan_size/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / scan_size scan_size \u00b6 val scan_size: Long Max number of records to scan when computing a batch range.","title":"Scan size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/scan_size/#scan_size","text":"val scan_size: Long Max number of records to scan when computing a batch range.","title":"scan_size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder Builder \u00b6 class Builder : Builder< GetNextBatchRangeRequest , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary backfill_id var backfill_id: String backfill_name var backfill_name: String backfill_range var backfill_range: KeyRange batch_size var batch_size: Long compute_count_limit var compute_count_limit: Long compute_time_limit_ms var compute_time_limit_ms: Long dry_run var dry_run: Boolean instance_name var instance_name: String parameters var parameters: MutableMap < String , ByteString> precomputing var precomputing: Boolean previous_end_key var previous_end_key: ByteString scan_size var scan_size: Long Functions \u00b6 Name Summary backfill_id fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name fun backfill_name(backfill_name: String ): Builder backfill_range fun backfill_range(backfill_range: KeyRange ): Builder The range of the whole backfill. This determines where the first batch starts and the last batch ends. batch_size fun batch_size(batch_size: Long ): Builder Max number of matching records to return in a batch range. build fun build(): GetNextBatchRangeRequest compute_count_limit fun compute_count_limit(compute_count_limit: Long ): Builder Compute as many batches as possible until this many results. compute_time_limit_ms fun compute_time_limit_ms(compute_time_limit_ms: Long ): Builder Compute as many batches as possible until this duration elapses. dry_run fun dry_run(dry_run: Boolean ): Builder instance_name fun instance_name(instance_name: String ): Builder parameters fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. The values are immutable for the life of the backfill. precomputing fun precomputing(precomputing: Boolean ): Builder Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case. previous_end_key fun previous_end_key(previous_end_key: ByteString): Builder End key of the previous computed batch. Can be null for the first call. scan_size fun scan_size(scan_size: Long ): Builder Max number of records to scan when computing a batch range.","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/#builder","text":"class Builder : Builder< GetNextBatchRangeRequest , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/#properties","text":"Name Summary backfill_id var backfill_id: String backfill_name var backfill_name: String backfill_range var backfill_range: KeyRange batch_size var batch_size: Long compute_count_limit var compute_count_limit: Long compute_time_limit_ms var compute_time_limit_ms: Long dry_run var dry_run: Boolean instance_name var instance_name: String parameters var parameters: MutableMap < String , ByteString> precomputing var precomputing: Boolean previous_end_key var previous_end_key: ByteString scan_size var scan_size: Long","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/#functions","text":"Name Summary backfill_id fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name fun backfill_name(backfill_name: String ): Builder backfill_range fun backfill_range(backfill_range: KeyRange ): Builder The range of the whole backfill. This determines where the first batch starts and the last batch ends. batch_size fun batch_size(batch_size: Long ): Builder Max number of matching records to return in a batch range. build fun build(): GetNextBatchRangeRequest compute_count_limit fun compute_count_limit(compute_count_limit: Long ): Builder Compute as many batches as possible until this many results. compute_time_limit_ms fun compute_time_limit_ms(compute_time_limit_ms: Long ): Builder Compute as many batches as possible until this duration elapses. dry_run fun dry_run(dry_run: Boolean ): Builder instance_name fun instance_name(instance_name: String ): Builder parameters fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. The values are immutable for the life of the backfill. precomputing fun precomputing(precomputing: Boolean ): Builder Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case. previous_end_key fun previous_end_key(previous_end_key: ByteString): Builder End key of the previous computed batch. Can be null for the first call. scan_size fun scan_size(scan_size: Long ): Builder Max number of records to scan when computing a batch range.","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/backfill_id/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / backfill_id backfill_id \u00b6 fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. var backfill_id: String","title":"Backfill id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/backfill_id/#backfill_id","text":"fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. var backfill_id: String","title":"backfill_id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/backfill_name/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / backfill_name backfill_name \u00b6 fun backfill_name(backfill_name: String ): Builder var backfill_name: String","title":"Backfill name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/backfill_name/#backfill_name","text":"fun backfill_name(backfill_name: String ): Builder var backfill_name: String","title":"backfill_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/backfill_range/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / backfill_range backfill_range \u00b6 fun backfill_range(backfill_range: KeyRange ): Builder The range of the whole backfill. This determines where the first batch starts and the last batch ends. var backfill_range: KeyRange","title":"Backfill range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/backfill_range/#backfill_range","text":"fun backfill_range(backfill_range: KeyRange ): Builder The range of the whole backfill. This determines where the first batch starts and the last batch ends. var backfill_range: KeyRange","title":"backfill_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/batch_size/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / batch_size batch_size \u00b6 fun batch_size(batch_size: Long ): Builder Max number of matching records to return in a batch range. var batch_size: Long","title":"Batch size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/batch_size/#batch_size","text":"fun batch_size(batch_size: Long ): Builder Max number of matching records to return in a batch range. var batch_size: Long","title":"batch_size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / build build \u00b6 fun build(): GetNextBatchRangeRequest","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/build/#build","text":"fun build(): GetNextBatchRangeRequest","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/compute_count_limit/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / compute_count_limit compute_count_limit \u00b6 fun compute_count_limit(compute_count_limit: Long ): Builder Compute as many batches as possible until this many results. var compute_count_limit: Long","title":"Compute count limit"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/compute_count_limit/#compute_count_limit","text":"fun compute_count_limit(compute_count_limit: Long ): Builder Compute as many batches as possible until this many results. var compute_count_limit: Long","title":"compute_count_limit"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/compute_time_limit_ms/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / compute_time_limit_ms compute_time_limit_ms \u00b6 fun compute_time_limit_ms(compute_time_limit_ms: Long ): Builder Compute as many batches as possible until this duration elapses. var compute_time_limit_ms: Long","title":"Compute time limit ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/compute_time_limit_ms/#compute_time_limit_ms","text":"fun compute_time_limit_ms(compute_time_limit_ms: Long ): Builder Compute as many batches as possible until this duration elapses. var compute_time_limit_ms: Long","title":"compute_time_limit_ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/dry_run/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / dry_run dry_run \u00b6 fun dry_run(dry_run: Boolean ): Builder var dry_run: Boolean","title":"Dry run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/dry_run/#dry_run","text":"fun dry_run(dry_run: Boolean ): Builder var dry_run: Boolean","title":"dry_run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/instance_name/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / instance_name instance_name \u00b6 fun instance_name(instance_name: String ): Builder var instance_name: String","title":"Instance name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/instance_name/#instance_name","text":"fun instance_name(instance_name: String ): Builder var instance_name: String","title":"instance_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/parameters/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / parameters parameters \u00b6 fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. The values are immutable for the life of the backfill. var parameters: MutableMap < String , ByteString>","title":"Parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/parameters/#parameters","text":"fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. The values are immutable for the life of the backfill. var parameters: MutableMap < String , ByteString>","title":"parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/precomputing/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / precomputing precomputing \u00b6 fun precomputing(precomputing: Boolean ): Builder Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case. var precomputing: Boolean","title":"Precomputing"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/precomputing/#precomputing","text":"fun precomputing(precomputing: Boolean ): Builder Indicates if this request is used to precompute data size. Client can choose to use a more optimized query in this case. var precomputing: Boolean","title":"precomputing"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/previous_end_key/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / previous_end_key previous_end_key \u00b6 fun previous_end_key(previous_end_key: ByteString): Builder End key of the previous computed batch. Can be null for the first call. var previous_end_key: ByteString","title":"Previous end key"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/previous_end_key/#previous_end_key","text":"fun previous_end_key(previous_end_key: ByteString): Builder End key of the previous computed batch. Can be null for the first call. var previous_end_key: ByteString","title":"previous_end_key"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/scan_size/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeRequest / Builder / scan_size scan_size \u00b6 fun scan_size(scan_size: Long ): Builder Max number of records to scan when computing a batch range. var scan_size: Long","title":"Scan size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-request/-builder/scan_size/#scan_size","text":"fun scan_size(scan_size: Long ): Builder Max number of records to scan when computing a batch range. var scan_size: Long","title":"scan_size"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse GetNextBatchRangeResponse \u00b6 class GetNextBatchRangeResponse : Message< GetNextBatchRangeResponse , Builder > Types \u00b6 Name Summary Batch class Batch : Message< Batch , Builder > Builder class Builder : Builder< GetNextBatchRangeResponse , Builder > Constructors \u00b6 Name Summary <init> GetNextBatchRangeResponse(batches: MutableList < Batch >) GetNextBatchRangeResponse(batches: MutableList < Batch >, unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetNextBatchRangeResponse > batches val batches: MutableList < Batch > Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/#getnextbatchrangeresponse","text":"class GetNextBatchRangeResponse : Message< GetNextBatchRangeResponse , Builder >","title":"GetNextBatchRangeResponse"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/#types","text":"Name Summary Batch class Batch : Message< Batch , Builder > Builder class Builder : Builder< GetNextBatchRangeResponse , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/#constructors","text":"Name Summary <init> GetNextBatchRangeResponse(batches: MutableList < Batch >) GetNextBatchRangeResponse(batches: MutableList < Batch >, unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetNextBatchRangeResponse > batches val batches: MutableList < Batch >","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< GetNextBatchRangeResponse >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< GetNextBatchRangeResponse >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / <init> <init> \u00b6 GetNextBatchRangeResponse(batches: MutableList < Batch >) GetNextBatchRangeResponse(batches: MutableList < Batch >, unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-init-/#init","text":"GetNextBatchRangeResponse(batches: MutableList < Batch >) GetNextBatchRangeResponse(batches: MutableList < Batch >, unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/batches/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / batches batches \u00b6 val batches: MutableList < Batch >","title":"Batches"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/batches/#batches","text":"val batches: MutableList < Batch >","title":"batches"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch Batch \u00b6 class Batch : Message< Batch , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< Batch , Builder > Constructors \u00b6 Name Summary <init> Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long ) Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Batch > DEFAULT_MATCHING_RECORD_COUNT static val DEFAULT_MATCHING_RECORD_COUNT: Long DEFAULT_SCANNED_RECORD_COUNT static val DEFAULT_SCANNED_RECORD_COUNT: Long batch_range val batch_range: KeyRange matching_record_count val matching_record_count: Long scanned_record_count val scanned_record_count: Long Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/#batch","text":"class Batch : Message< Batch , Builder >","title":"Batch"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/#types","text":"Name Summary Builder class Builder : Builder< Batch , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/#constructors","text":"Name Summary <init> Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long ) Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Batch > DEFAULT_MATCHING_RECORD_COUNT static val DEFAULT_MATCHING_RECORD_COUNT: Long DEFAULT_SCANNED_RECORD_COUNT static val DEFAULT_SCANNED_RECORD_COUNT: Long batch_range val batch_range: KeyRange matching_record_count val matching_record_count: Long scanned_record_count val scanned_record_count: Long","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< Batch >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< Batch >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-d-e-f-a-u-l-t_-m-a-t-c-h-i-n-g_-r-e-c-o-r-d_-c-o-u-n-t/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / DEFAULT_MATCHING_RECORD_COUNT DEFAULT_MATCHING_RECORD_COUNT \u00b6 static val DEFAULT_MATCHING_RECORD_COUNT: Long","title":" d e f a u l t  m a t c h i n g  r e c o r d  c o u n t"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-d-e-f-a-u-l-t_-m-a-t-c-h-i-n-g_-r-e-c-o-r-d_-c-o-u-n-t/#default_matching_record_count","text":"static val DEFAULT_MATCHING_RECORD_COUNT: Long","title":"DEFAULT_MATCHING_RECORD_COUNT"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-d-e-f-a-u-l-t_-s-c-a-n-n-e-d_-r-e-c-o-r-d_-c-o-u-n-t/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / DEFAULT_SCANNED_RECORD_COUNT DEFAULT_SCANNED_RECORD_COUNT \u00b6 static val DEFAULT_SCANNED_RECORD_COUNT: Long","title":" d e f a u l t  s c a n n e d  r e c o r d  c o u n t"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-d-e-f-a-u-l-t_-s-c-a-n-n-e-d_-r-e-c-o-r-d_-c-o-u-n-t/#default_scanned_record_count","text":"static val DEFAULT_SCANNED_RECORD_COUNT: Long","title":"DEFAULT_SCANNED_RECORD_COUNT"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / <init> <init> \u00b6 Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long ) Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long , unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-init-/#init","text":"Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long ) Batch(batch_range: KeyRange , scanned_record_count: Long , matching_record_count: Long , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/batch_range/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / batch_range batch_range \u00b6 val batch_range: KeyRange","title":"Batch range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/batch_range/#batch_range","text":"val batch_range: KeyRange","title":"batch_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/matching_record_count/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / matching_record_count matching_record_count \u00b6 val matching_record_count: Long","title":"Matching record count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/matching_record_count/#matching_record_count","text":"val matching_record_count: Long","title":"matching_record_count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/scanned_record_count/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / scanned_record_count scanned_record_count \u00b6 val scanned_record_count: Long","title":"Scanned record count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/scanned_record_count/#scanned_record_count","text":"val scanned_record_count: Long","title":"scanned_record_count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / Builder Builder \u00b6 class Builder : Builder< Batch , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary batch_range var batch_range: KeyRange matching_record_count var matching_record_count: Long scanned_record_count var scanned_record_count: Long Functions \u00b6 Name Summary batch_range fun batch_range(batch_range: KeyRange ): Builder build fun build(): Batch matching_record_count fun matching_record_count(matching_record_count: Long ): Builder scanned_record_count fun scanned_record_count(scanned_record_count: Long ): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/#builder","text":"class Builder : Builder< Batch , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/#properties","text":"Name Summary batch_range var batch_range: KeyRange matching_record_count var matching_record_count: Long scanned_record_count var scanned_record_count: Long","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/#functions","text":"Name Summary batch_range fun batch_range(batch_range: KeyRange ): Builder build fun build(): Batch matching_record_count fun matching_record_count(matching_record_count: Long ): Builder scanned_record_count fun scanned_record_count(scanned_record_count: Long ): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/batch_range/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / Builder / batch_range batch_range \u00b6 fun batch_range(batch_range: KeyRange ): Builder var batch_range: KeyRange","title":"Batch range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/batch_range/#batch_range","text":"fun batch_range(batch_range: KeyRange ): Builder var batch_range: KeyRange","title":"batch_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / Builder / build build \u00b6 fun build(): Batch","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/build/#build","text":"fun build(): Batch","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/matching_record_count/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / Builder / matching_record_count matching_record_count \u00b6 fun matching_record_count(matching_record_count: Long ): Builder var matching_record_count: Long","title":"Matching record count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/matching_record_count/#matching_record_count","text":"fun matching_record_count(matching_record_count: Long ): Builder var matching_record_count: Long","title":"matching_record_count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/scanned_record_count/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Batch / Builder / scanned_record_count scanned_record_count \u00b6 fun scanned_record_count(scanned_record_count: Long ): Builder var scanned_record_count: Long","title":"Scanned record count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-batch/-builder/scanned_record_count/#scanned_record_count","text":"fun scanned_record_count(scanned_record_count: Long ): Builder var scanned_record_count: Long","title":"scanned_record_count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Builder Builder \u00b6 class Builder : Builder< GetNextBatchRangeResponse , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary batches var batches: MutableList < Batch > Functions \u00b6 Name Summary batches fun batches(batches: MutableList < Batch >): Builder build fun build(): GetNextBatchRangeResponse","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/#builder","text":"class Builder : Builder< GetNextBatchRangeResponse , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/#properties","text":"Name Summary batches var batches: MutableList < Batch >","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/#functions","text":"Name Summary batches fun batches(batches: MutableList < Batch >): Builder build fun build(): GetNextBatchRangeResponse","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/batches/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Builder / batches batches \u00b6 fun batches(batches: MutableList < Batch >): Builder var batches: MutableList < Batch >","title":"Batches"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/batches/#batches","text":"fun batches(batches: MutableList < Batch >): Builder var batches: MutableList < Batch >","title":"batches"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / GetNextBatchRangeResponse / Builder / build build \u00b6 fun build(): GetNextBatchRangeResponse","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-get-next-batch-range-response/-builder/build/#build","text":"fun build(): GetNextBatchRangeResponse","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange KeyRange \u00b6 class KeyRange : Message< KeyRange , Builder > In this file: APIs that backfila calls on the client service. Inclusive range of primary keys. Backfila will never make assumptions about the type of the primary key, these are passed around as tokens. Types \u00b6 Name Summary Builder class Builder : Builder< KeyRange , Builder > Constructors \u00b6 Name Summary <init> KeyRange(start: ByteString, end: ByteString) KeyRange(start: ByteString, end: ByteString, unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< KeyRange > DEFAULT_END static val DEFAULT_END: ByteString DEFAULT_START static val DEFAULT_START: ByteString end val end: ByteString start val start: ByteString Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/#keyrange","text":"class KeyRange : Message< KeyRange , Builder > In this file: APIs that backfila calls on the client service. Inclusive range of primary keys. Backfila will never make assumptions about the type of the primary key, these are passed around as tokens.","title":"KeyRange"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/#types","text":"Name Summary Builder class Builder : Builder< KeyRange , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/#constructors","text":"Name Summary <init> KeyRange(start: ByteString, end: ByteString) KeyRange(start: ByteString, end: ByteString, unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< KeyRange > DEFAULT_END static val DEFAULT_END: ByteString DEFAULT_START static val DEFAULT_START: ByteString end val end: ByteString start val start: ByteString","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< KeyRange >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< KeyRange >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-d-e-f-a-u-l-t_-e-n-d/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / DEFAULT_END DEFAULT_END \u00b6 static val DEFAULT_END: ByteString","title":" d e f a u l t  e n d"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-d-e-f-a-u-l-t_-e-n-d/#default_end","text":"static val DEFAULT_END: ByteString","title":"DEFAULT_END"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-d-e-f-a-u-l-t_-s-t-a-r-t/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / DEFAULT_START DEFAULT_START \u00b6 static val DEFAULT_START: ByteString","title":" d e f a u l t  s t a r t"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-d-e-f-a-u-l-t_-s-t-a-r-t/#default_start","text":"static val DEFAULT_START: ByteString","title":"DEFAULT_START"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / <init> <init> \u00b6 KeyRange(start: ByteString, end: ByteString) KeyRange(start: ByteString, end: ByteString, unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-init-/#init","text":"KeyRange(start: ByteString, end: ByteString) KeyRange(start: ByteString, end: ByteString, unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/end/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / end end \u00b6 val end: ByteString","title":"End"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/end/#end","text":"val end: ByteString","title":"end"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/start/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / start start \u00b6 val start: ByteString","title":"Start"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/start/#start","text":"val start: ByteString","title":"start"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / Builder Builder \u00b6 class Builder : Builder< KeyRange , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary end var end: ByteString start var start: ByteString Functions \u00b6 Name Summary build fun build(): KeyRange end fun end(end: ByteString): Builder start fun start(start: ByteString): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/#builder","text":"class Builder : Builder< KeyRange , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/#properties","text":"Name Summary end var end: ByteString start var start: ByteString","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/#functions","text":"Name Summary build fun build(): KeyRange end fun end(end: ByteString): Builder start fun start(start: ByteString): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / Builder / build build \u00b6 fun build(): KeyRange","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/build/#build","text":"fun build(): KeyRange","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/end/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / Builder / end end \u00b6 fun end(end: ByteString): Builder var end: ByteString","title":"End"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/end/#end","text":"fun end(end: ByteString): Builder var end: ByteString","title":"end"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/start/","text":"client-misk / app.cash.backfila.protos.clientservice / KeyRange / Builder / start start \u00b6 fun start(start: ByteString): Builder var start: ByteString","title":"Start"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-key-range/-builder/start/#start","text":"fun start(start: ByteString): Builder var start: ByteString","title":"start"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData PipelinedData \u00b6 class PipelinedData : Message< PipelinedData , Builder > Pipelined data can be any format as long as both the consumer and provider agree on it. This structure is passed around from the source to the target unchanged. Types \u00b6 Name Summary Builder class Builder : Builder< PipelinedData , Builder > Constructors \u00b6 Name Summary <init> PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>) PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>, unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PipelinedData > metadata val metadata: MutableList <ByteString> records val records: MutableList < PipelinedRecord > Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/#pipelineddata","text":"class PipelinedData : Message< PipelinedData , Builder > Pipelined data can be any format as long as both the consumer and provider agree on it. This structure is passed around from the source to the target unchanged.","title":"PipelinedData"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/#types","text":"Name Summary Builder class Builder : Builder< PipelinedData , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/#constructors","text":"Name Summary <init> PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>) PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>, unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PipelinedData > metadata val metadata: MutableList <ByteString> records val records: MutableList < PipelinedRecord >","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< PipelinedData >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< PipelinedData >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / <init> <init> \u00b6 PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>) PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>, unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-init-/#init","text":"PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>) PipelinedData(records: MutableList < PipelinedRecord >, metadata: MutableList <ByteString>, unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/metadata/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / metadata metadata \u00b6 val metadata: MutableList <ByteString>","title":"Metadata"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/metadata/#metadata","text":"val metadata: MutableList <ByteString>","title":"metadata"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/records/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / records records \u00b6 val records: MutableList < PipelinedRecord >","title":"Records"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/records/#records","text":"val records: MutableList < PipelinedRecord >","title":"records"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / Builder Builder \u00b6 class Builder : Builder< PipelinedData , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary metadata var metadata: MutableList <ByteString> records var records: MutableList < PipelinedRecord > Functions \u00b6 Name Summary build fun build(): PipelinedData metadata fun metadata(metadata: MutableList <ByteString>): Builder records fun records(records: MutableList < PipelinedRecord >): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/#builder","text":"class Builder : Builder< PipelinedData , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/#properties","text":"Name Summary metadata var metadata: MutableList <ByteString> records var records: MutableList < PipelinedRecord >","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/#functions","text":"Name Summary build fun build(): PipelinedData metadata fun metadata(metadata: MutableList <ByteString>): Builder records fun records(records: MutableList < PipelinedRecord >): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / Builder / build build \u00b6 fun build(): PipelinedData","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/build/#build","text":"fun build(): PipelinedData","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/metadata/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / Builder / metadata metadata \u00b6 fun metadata(metadata: MutableList <ByteString>): Builder var metadata: MutableList <ByteString>","title":"Metadata"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/metadata/#metadata","text":"fun metadata(metadata: MutableList <ByteString>): Builder var metadata: MutableList <ByteString>","title":"metadata"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/records/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedData / Builder / records records \u00b6 fun records(records: MutableList < PipelinedRecord >): Builder var records: MutableList < PipelinedRecord >","title":"Records"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-data/-builder/records/#records","text":"fun records(records: MutableList < PipelinedRecord >): Builder var records: MutableList < PipelinedRecord >","title":"records"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord PipelinedRecord \u00b6 class PipelinedRecord : Message< PipelinedRecord , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< PipelinedRecord , Builder > Constructors \u00b6 Name Summary <init> PipelinedRecord(data: ByteString) PipelinedRecord(data: ByteString, unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PipelinedRecord > DEFAULT_DATA static val DEFAULT_DATA: ByteString data val data: ByteString Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/#pipelinedrecord","text":"class PipelinedRecord : Message< PipelinedRecord , Builder >","title":"PipelinedRecord"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/#types","text":"Name Summary Builder class Builder : Builder< PipelinedRecord , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/#constructors","text":"Name Summary <init> PipelinedRecord(data: ByteString) PipelinedRecord(data: ByteString, unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PipelinedRecord > DEFAULT_DATA static val DEFAULT_DATA: ByteString data val data: ByteString","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< PipelinedRecord >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< PipelinedRecord >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-d-e-f-a-u-l-t_-d-a-t-a/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / DEFAULT_DATA DEFAULT_DATA \u00b6 static val DEFAULT_DATA: ByteString","title":" d e f a u l t  d a t a"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-d-e-f-a-u-l-t_-d-a-t-a/#default_data","text":"static val DEFAULT_DATA: ByteString","title":"DEFAULT_DATA"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / <init> <init> \u00b6 PipelinedRecord(data: ByteString) PipelinedRecord(data: ByteString, unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-init-/#init","text":"PipelinedRecord(data: ByteString) PipelinedRecord(data: ByteString, unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/data/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / data data \u00b6 val data: ByteString","title":"Data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/data/#data","text":"val data: ByteString","title":"data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / Builder Builder \u00b6 class Builder : Builder< PipelinedRecord , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary data var data: ByteString Functions \u00b6 Name Summary build fun build(): PipelinedRecord data fun data(data: ByteString): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/#builder","text":"class Builder : Builder< PipelinedRecord , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/#properties","text":"Name Summary data var data: ByteString","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/#functions","text":"Name Summary build fun build(): PipelinedRecord data fun data(data: ByteString): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / Builder / build build \u00b6 fun build(): PipelinedRecord","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/build/#build","text":"fun build(): PipelinedRecord","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/data/","text":"client-misk / app.cash.backfila.protos.clientservice / PipelinedRecord / Builder / data data \u00b6 fun data(data: ByteString): Builder var data: ByteString","title":"Data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-pipelined-record/-builder/data/#data","text":"fun data(data: ByteString): Builder var data: ByteString","title":"data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest PrepareBackfillRequest \u00b6 class PrepareBackfillRequest : Message< PrepareBackfillRequest , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< PrepareBackfillRequest , Builder > Constructors \u00b6 Name Summary <init> PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean ) PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PrepareBackfillRequest > DEFAULT_BACKFILL_ID static val DEFAULT_BACKFILL_ID: String DEFAULT_BACKFILL_NAME static val DEFAULT_BACKFILL_NAME: String DEFAULT_DRY_RUN static val DEFAULT_DRY_RUN: Boolean backfill_id val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name val backfill_name: String dry_run val dry_run: Boolean parameters val parameters: MutableMap < String , ByteString> User provided parameters at creation. range val range: KeyRange Range populated if specified by user in UI Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/#preparebackfillrequest","text":"class PrepareBackfillRequest : Message< PrepareBackfillRequest , Builder >","title":"PrepareBackfillRequest"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/#types","text":"Name Summary Builder class Builder : Builder< PrepareBackfillRequest , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/#constructors","text":"Name Summary <init> PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean ) PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PrepareBackfillRequest > DEFAULT_BACKFILL_ID static val DEFAULT_BACKFILL_ID: String DEFAULT_BACKFILL_NAME static val DEFAULT_BACKFILL_NAME: String DEFAULT_DRY_RUN static val DEFAULT_DRY_RUN: Boolean backfill_id val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name val backfill_name: String dry_run val dry_run: Boolean parameters val parameters: MutableMap < String , ByteString> User provided parameters at creation. range val range: KeyRange Range populated if specified by user in UI","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< PrepareBackfillRequest >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< PrepareBackfillRequest >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-i-d/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / DEFAULT_BACKFILL_ID DEFAULT_BACKFILL_ID \u00b6 static val DEFAULT_BACKFILL_ID: String","title":" d e f a u l t  b a c k f i l l  i d"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-i-d/#default_backfill_id","text":"static val DEFAULT_BACKFILL_ID: String","title":"DEFAULT_BACKFILL_ID"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-n-a-m-e/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / DEFAULT_BACKFILL_NAME DEFAULT_BACKFILL_NAME \u00b6 static val DEFAULT_BACKFILL_NAME: String","title":" d e f a u l t  b a c k f i l l  n a m e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-n-a-m-e/#default_backfill_name","text":"static val DEFAULT_BACKFILL_NAME: String","title":"DEFAULT_BACKFILL_NAME"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-d-e-f-a-u-l-t_-d-r-y_-r-u-n/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / DEFAULT_DRY_RUN DEFAULT_DRY_RUN \u00b6 static val DEFAULT_DRY_RUN: Boolean","title":" d e f a u l t  d r y  r u n"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-d-e-f-a-u-l-t_-d-r-y_-r-u-n/#default_dry_run","text":"static val DEFAULT_DRY_RUN: Boolean","title":"DEFAULT_DRY_RUN"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / <init> <init> \u00b6 PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean ) PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-init-/#init","text":"PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean ) PrepareBackfillRequest(backfill_id: String , backfill_name: String , range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/backfill_id/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / backfill_id backfill_id \u00b6 val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation.","title":"Backfill id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/backfill_id/#backfill_id","text":"val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation.","title":"backfill_id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/backfill_name/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / backfill_name backfill_name \u00b6 val backfill_name: String","title":"Backfill name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/backfill_name/#backfill_name","text":"val backfill_name: String","title":"backfill_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/dry_run/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / dry_run dry_run \u00b6 val dry_run: Boolean","title":"Dry run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/dry_run/#dry_run","text":"val dry_run: Boolean","title":"dry_run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/parameters/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / parameters parameters \u00b6 val parameters: MutableMap < String , ByteString> User provided parameters at creation.","title":"Parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/parameters/#parameters","text":"val parameters: MutableMap < String , ByteString> User provided parameters at creation.","title":"parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/range/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / range range \u00b6 val range: KeyRange Range populated if specified by user in UI","title":"Range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/range/#range","text":"val range: KeyRange Range populated if specified by user in UI","title":"range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder Builder \u00b6 class Builder : Builder< PrepareBackfillRequest , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary backfill_id var backfill_id: String backfill_name var backfill_name: String dry_run var dry_run: Boolean parameters var parameters: MutableMap < String , ByteString> range var range: KeyRange Functions \u00b6 Name Summary backfill_id fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name fun backfill_name(backfill_name: String ): Builder build fun build(): PrepareBackfillRequest dry_run fun dry_run(dry_run: Boolean ): Builder parameters fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. range fun range(range: KeyRange ): Builder Range populated if specified by user in UI","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/#builder","text":"class Builder : Builder< PrepareBackfillRequest , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/#properties","text":"Name Summary backfill_id var backfill_id: String backfill_name var backfill_name: String dry_run var dry_run: Boolean parameters var parameters: MutableMap < String , ByteString> range var range: KeyRange","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/#functions","text":"Name Summary backfill_id fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name fun backfill_name(backfill_name: String ): Builder build fun build(): PrepareBackfillRequest dry_run fun dry_run(dry_run: Boolean ): Builder parameters fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. range fun range(range: KeyRange ): Builder Range populated if specified by user in UI","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/backfill_id/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / backfill_id backfill_id \u00b6 fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. var backfill_id: String","title":"Backfill id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/backfill_id/#backfill_id","text":"fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. var backfill_id: String","title":"backfill_id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/backfill_name/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / backfill_name backfill_name \u00b6 fun backfill_name(backfill_name: String ): Builder var backfill_name: String","title":"Backfill name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/backfill_name/#backfill_name","text":"fun backfill_name(backfill_name: String ): Builder var backfill_name: String","title":"backfill_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / build build \u00b6 fun build(): PrepareBackfillRequest","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/build/#build","text":"fun build(): PrepareBackfillRequest","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/dry_run/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / dry_run dry_run \u00b6 fun dry_run(dry_run: Boolean ): Builder var dry_run: Boolean","title":"Dry run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/dry_run/#dry_run","text":"fun dry_run(dry_run: Boolean ): Builder var dry_run: Boolean","title":"dry_run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/parameters/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / parameters parameters \u00b6 fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. var parameters: MutableMap < String , ByteString>","title":"Parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/parameters/#parameters","text":"fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. var parameters: MutableMap < String , ByteString>","title":"parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/range/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillRequest / Builder / range range \u00b6 fun range(range: KeyRange ): Builder Range populated if specified by user in UI var range: KeyRange","title":"Range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-request/-builder/range/#range","text":"fun range(range: KeyRange ): Builder Range populated if specified by user in UI var range: KeyRange","title":"range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse PrepareBackfillResponse \u00b6 class PrepareBackfillResponse : Message< PrepareBackfillResponse , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< PrepareBackfillResponse , Builder > Instance class Instance : Message< Instance , Builder > Constructors \u00b6 Name Summary <init> PrepareBackfillResponse(instances: MutableList < Instance >) PrepareBackfillResponse(instances: MutableList < Instance >, unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PrepareBackfillResponse > instances val instances: MutableList < Instance > Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/#preparebackfillresponse","text":"class PrepareBackfillResponse : Message< PrepareBackfillResponse , Builder >","title":"PrepareBackfillResponse"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/#types","text":"Name Summary Builder class Builder : Builder< PrepareBackfillResponse , Builder > Instance class Instance : Message< Instance , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/#constructors","text":"Name Summary <init> PrepareBackfillResponse(instances: MutableList < Instance >) PrepareBackfillResponse(instances: MutableList < Instance >, unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< PrepareBackfillResponse > instances val instances: MutableList < Instance >","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< PrepareBackfillResponse >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< PrepareBackfillResponse >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / <init> <init> \u00b6 PrepareBackfillResponse(instances: MutableList < Instance >) PrepareBackfillResponse(instances: MutableList < Instance >, unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-init-/#init","text":"PrepareBackfillResponse(instances: MutableList < Instance >) PrepareBackfillResponse(instances: MutableList < Instance >, unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/instances/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / instances instances \u00b6 val instances: MutableList < Instance >","title":"Instances"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/instances/#instances","text":"val instances: MutableList < Instance >","title":"instances"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Builder Builder \u00b6 class Builder : Builder< PrepareBackfillResponse , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary instances var instances: MutableList < Instance > Functions \u00b6 Name Summary build fun build(): PrepareBackfillResponse instances fun instances(instances: MutableList < Instance >): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/#builder","text":"class Builder : Builder< PrepareBackfillResponse , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/#properties","text":"Name Summary instances var instances: MutableList < Instance >","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/#functions","text":"Name Summary build fun build(): PrepareBackfillResponse instances fun instances(instances: MutableList < Instance >): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Builder / build build \u00b6 fun build(): PrepareBackfillResponse","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/build/#build","text":"fun build(): PrepareBackfillResponse","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/instances/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Builder / instances instances \u00b6 fun instances(instances: MutableList < Instance >): Builder var instances: MutableList < Instance >","title":"Instances"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-builder/instances/#instances","text":"fun instances(instances: MutableList < Instance >): Builder var instances: MutableList < Instance >","title":"instances"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance Instance \u00b6 class Instance : Message< Instance , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< Instance , Builder > Constructors \u00b6 Name Summary <init> Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long ) Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Instance > DEFAULT_ESTIMATED_RECORD_COUNT static val DEFAULT_ESTIMATED_RECORD_COUNT: Long DEFAULT_INSTANCE_NAME static val DEFAULT_INSTANCE_NAME: String backfill_range val backfill_range: KeyRange estimated_record_count val estimated_record_count: Long If available, an estimate can be provided here to display while the actual count is being computed. instance_name val instance_name: String Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/#instance","text":"class Instance : Message< Instance , Builder >","title":"Instance"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/#types","text":"Name Summary Builder class Builder : Builder< Instance , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/#constructors","text":"Name Summary <init> Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long ) Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Instance > DEFAULT_ESTIMATED_RECORD_COUNT static val DEFAULT_ESTIMATED_RECORD_COUNT: Long DEFAULT_INSTANCE_NAME static val DEFAULT_INSTANCE_NAME: String backfill_range val backfill_range: KeyRange estimated_record_count val estimated_record_count: Long If available, an estimate can be provided here to display while the actual count is being computed. instance_name val instance_name: String","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< Instance >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< Instance >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-d-e-f-a-u-l-t_-e-s-t-i-m-a-t-e-d_-r-e-c-o-r-d_-c-o-u-n-t/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / DEFAULT_ESTIMATED_RECORD_COUNT DEFAULT_ESTIMATED_RECORD_COUNT \u00b6 static val DEFAULT_ESTIMATED_RECORD_COUNT: Long","title":" d e f a u l t  e s t i m a t e d  r e c o r d  c o u n t"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-d-e-f-a-u-l-t_-e-s-t-i-m-a-t-e-d_-r-e-c-o-r-d_-c-o-u-n-t/#default_estimated_record_count","text":"static val DEFAULT_ESTIMATED_RECORD_COUNT: Long","title":"DEFAULT_ESTIMATED_RECORD_COUNT"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-d-e-f-a-u-l-t_-i-n-s-t-a-n-c-e_-n-a-m-e/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / DEFAULT_INSTANCE_NAME DEFAULT_INSTANCE_NAME \u00b6 static val DEFAULT_INSTANCE_NAME: String","title":" d e f a u l t  i n s t a n c e  n a m e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-d-e-f-a-u-l-t_-i-n-s-t-a-n-c-e_-n-a-m-e/#default_instance_name","text":"static val DEFAULT_INSTANCE_NAME: String","title":"DEFAULT_INSTANCE_NAME"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / <init> <init> \u00b6 Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long ) Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long , unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-init-/#init","text":"Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long ) Instance(instance_name: String , backfill_range: KeyRange , estimated_record_count: Long , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/backfill_range/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / backfill_range backfill_range \u00b6 val backfill_range: KeyRange","title":"Backfill range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/backfill_range/#backfill_range","text":"val backfill_range: KeyRange","title":"backfill_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/estimated_record_count/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / estimated_record_count estimated_record_count \u00b6 val estimated_record_count: Long If available, an estimate can be provided here to display while the actual count is being computed.","title":"Estimated record count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/estimated_record_count/#estimated_record_count","text":"val estimated_record_count: Long If available, an estimate can be provided here to display while the actual count is being computed.","title":"estimated_record_count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/instance_name/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / instance_name instance_name \u00b6 val instance_name: String","title":"Instance name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/instance_name/#instance_name","text":"val instance_name: String","title":"instance_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / Builder Builder \u00b6 class Builder : Builder< Instance , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary backfill_range var backfill_range: KeyRange estimated_record_count var estimated_record_count: Long instance_name var instance_name: String Functions \u00b6 Name Summary backfill_range fun backfill_range(backfill_range: KeyRange ): Builder build fun build(): Instance estimated_record_count fun estimated_record_count(estimated_record_count: Long ): Builder If available, an estimate can be provided here to display while the actual count is being computed. instance_name fun instance_name(instance_name: String ): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/#builder","text":"class Builder : Builder< Instance , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/#properties","text":"Name Summary backfill_range var backfill_range: KeyRange estimated_record_count var estimated_record_count: Long instance_name var instance_name: String","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/#functions","text":"Name Summary backfill_range fun backfill_range(backfill_range: KeyRange ): Builder build fun build(): Instance estimated_record_count fun estimated_record_count(estimated_record_count: Long ): Builder If available, an estimate can be provided here to display while the actual count is being computed. instance_name fun instance_name(instance_name: String ): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/backfill_range/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / Builder / backfill_range backfill_range \u00b6 fun backfill_range(backfill_range: KeyRange ): Builder var backfill_range: KeyRange","title":"Backfill range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/backfill_range/#backfill_range","text":"fun backfill_range(backfill_range: KeyRange ): Builder var backfill_range: KeyRange","title":"backfill_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / Builder / build build \u00b6 fun build(): Instance","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/build/#build","text":"fun build(): Instance","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/estimated_record_count/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / Builder / estimated_record_count estimated_record_count \u00b6 fun estimated_record_count(estimated_record_count: Long ): Builder If available, an estimate can be provided here to display while the actual count is being computed. var estimated_record_count: Long","title":"Estimated record count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/estimated_record_count/#estimated_record_count","text":"fun estimated_record_count(estimated_record_count: Long ): Builder If available, an estimate can be provided here to display while the actual count is being computed. var estimated_record_count: Long","title":"estimated_record_count"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/instance_name/","text":"client-misk / app.cash.backfila.protos.clientservice / PrepareBackfillResponse / Instance / Builder / instance_name instance_name \u00b6 fun instance_name(instance_name: String ): Builder var instance_name: String","title":"Instance name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-prepare-backfill-response/-instance/-builder/instance_name/#instance_name","text":"fun instance_name(instance_name: String ): Builder var instance_name: String","title":"instance_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest RunBatchRequest \u00b6 class RunBatchRequest : Message< RunBatchRequest , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< RunBatchRequest , Builder > Constructors \u00b6 Name Summary <init> RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData ) RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< RunBatchRequest > DEFAULT_BACKFILL_ID static val DEFAULT_BACKFILL_ID: String DEFAULT_BACKFILL_NAME static val DEFAULT_BACKFILL_NAME: String DEFAULT_DRY_RUN static val DEFAULT_DRY_RUN: Boolean DEFAULT_INSTANCE_NAME static val DEFAULT_INSTANCE_NAME: String backfill_id val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name val backfill_name: String batch_range val batch_range: KeyRange dry_run val dry_run: Boolean instance_name val instance_name: String parameters val parameters: MutableMap < String , ByteString> User provided parameters at creation. pipelined_data val pipelined_data: PipelinedData Provided data from the source backfill if this is the target backfill in a pipelined backfill. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/#runbatchrequest","text":"class RunBatchRequest : Message< RunBatchRequest , Builder >","title":"RunBatchRequest"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/#types","text":"Name Summary Builder class Builder : Builder< RunBatchRequest , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/#constructors","text":"Name Summary <init> RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData ) RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< RunBatchRequest > DEFAULT_BACKFILL_ID static val DEFAULT_BACKFILL_ID: String DEFAULT_BACKFILL_NAME static val DEFAULT_BACKFILL_NAME: String DEFAULT_DRY_RUN static val DEFAULT_DRY_RUN: Boolean DEFAULT_INSTANCE_NAME static val DEFAULT_INSTANCE_NAME: String backfill_id val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name val backfill_name: String batch_range val batch_range: KeyRange dry_run val dry_run: Boolean instance_name val instance_name: String parameters val parameters: MutableMap < String , ByteString> User provided parameters at creation. pipelined_data val pipelined_data: PipelinedData Provided data from the source backfill if this is the target backfill in a pipelined backfill.","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< RunBatchRequest >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< RunBatchRequest >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-i-d/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / DEFAULT_BACKFILL_ID DEFAULT_BACKFILL_ID \u00b6 static val DEFAULT_BACKFILL_ID: String","title":" d e f a u l t  b a c k f i l l  i d"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-i-d/#default_backfill_id","text":"static val DEFAULT_BACKFILL_ID: String","title":"DEFAULT_BACKFILL_ID"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-n-a-m-e/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / DEFAULT_BACKFILL_NAME DEFAULT_BACKFILL_NAME \u00b6 static val DEFAULT_BACKFILL_NAME: String","title":" d e f a u l t  b a c k f i l l  n a m e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-b-a-c-k-f-i-l-l_-n-a-m-e/#default_backfill_name","text":"static val DEFAULT_BACKFILL_NAME: String","title":"DEFAULT_BACKFILL_NAME"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-d-r-y_-r-u-n/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / DEFAULT_DRY_RUN DEFAULT_DRY_RUN \u00b6 static val DEFAULT_DRY_RUN: Boolean","title":" d e f a u l t  d r y  r u n"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-d-r-y_-r-u-n/#default_dry_run","text":"static val DEFAULT_DRY_RUN: Boolean","title":"DEFAULT_DRY_RUN"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-i-n-s-t-a-n-c-e_-n-a-m-e/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / DEFAULT_INSTANCE_NAME DEFAULT_INSTANCE_NAME \u00b6 static val DEFAULT_INSTANCE_NAME: String","title":" d e f a u l t  i n s t a n c e  n a m e"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-d-e-f-a-u-l-t_-i-n-s-t-a-n-c-e_-n-a-m-e/#default_instance_name","text":"static val DEFAULT_INSTANCE_NAME: String","title":"DEFAULT_INSTANCE_NAME"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / <init> <init> \u00b6 RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData ) RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData , unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-init-/#init","text":"RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData ) RunBatchRequest(backfill_id: String , backfill_name: String , instance_name: String , batch_range: KeyRange , parameters: MutableMap < String , ByteString>, dry_run: Boolean , pipelined_data: PipelinedData , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/backfill_id/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / backfill_id backfill_id \u00b6 val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation.","title":"Backfill id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/backfill_id/#backfill_id","text":"val backfill_id: String A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation.","title":"backfill_id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/backfill_name/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / backfill_name backfill_name \u00b6 val backfill_name: String","title":"Backfill name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/backfill_name/#backfill_name","text":"val backfill_name: String","title":"backfill_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/batch_range/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / batch_range batch_range \u00b6 val batch_range: KeyRange","title":"Batch range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/batch_range/#batch_range","text":"val batch_range: KeyRange","title":"batch_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/dry_run/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / dry_run dry_run \u00b6 val dry_run: Boolean","title":"Dry run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/dry_run/#dry_run","text":"val dry_run: Boolean","title":"dry_run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/instance_name/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / instance_name instance_name \u00b6 val instance_name: String","title":"Instance name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/instance_name/#instance_name","text":"val instance_name: String","title":"instance_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/parameters/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / parameters parameters \u00b6 val parameters: MutableMap < String , ByteString> User provided parameters at creation.","title":"Parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/parameters/#parameters","text":"val parameters: MutableMap < String , ByteString> User provided parameters at creation.","title":"parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/pipelined_data/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / pipelined_data pipelined_data \u00b6 val pipelined_data: PipelinedData Provided data from the source backfill if this is the target backfill in a pipelined backfill.","title":"Pipelined data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/pipelined_data/#pipelined_data","text":"val pipelined_data: PipelinedData Provided data from the source backfill if this is the target backfill in a pipelined backfill.","title":"pipelined_data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder Builder \u00b6 class Builder : Builder< RunBatchRequest , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary backfill_id var backfill_id: String backfill_name var backfill_name: String batch_range var batch_range: KeyRange dry_run var dry_run: Boolean instance_name var instance_name: String parameters var parameters: MutableMap < String , ByteString> pipelined_data var pipelined_data: PipelinedData Functions \u00b6 Name Summary backfill_id fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name fun backfill_name(backfill_name: String ): Builder batch_range fun batch_range(batch_range: KeyRange ): Builder build fun build(): RunBatchRequest dry_run fun dry_run(dry_run: Boolean ): Builder instance_name fun instance_name(instance_name: String ): Builder parameters fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. pipelined_data fun pipelined_data(pipelined_data: PipelinedData ): Builder Provided data from the source backfill if this is the target backfill in a pipelined backfill.","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/#builder","text":"class Builder : Builder< RunBatchRequest , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/#properties","text":"Name Summary backfill_id var backfill_id: String backfill_name var backfill_name: String batch_range var batch_range: KeyRange dry_run var dry_run: Boolean instance_name var instance_name: String parameters var parameters: MutableMap < String , ByteString> pipelined_data var pipelined_data: PipelinedData","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/#functions","text":"Name Summary backfill_id fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. backfill_name fun backfill_name(backfill_name: String ): Builder batch_range fun batch_range(batch_range: KeyRange ): Builder build fun build(): RunBatchRequest dry_run fun dry_run(dry_run: Boolean ): Builder instance_name fun instance_name(instance_name: String ): Builder parameters fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. pipelined_data fun pipelined_data(pipelined_data: PipelinedData ): Builder Provided data from the source backfill if this is the target backfill in a pipelined backfill.","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/backfill_id/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / backfill_id backfill_id \u00b6 fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. var backfill_id: String","title":"Backfill id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/backfill_id/#backfill_id","text":"fun backfill_id(backfill_id: String ): Builder A unique identifier for this backfill run. Can be used as a caching key since backfill metadata is immutable after creation. var backfill_id: String","title":"backfill_id"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/backfill_name/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / backfill_name backfill_name \u00b6 fun backfill_name(backfill_name: String ): Builder var backfill_name: String","title":"Backfill name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/backfill_name/#backfill_name","text":"fun backfill_name(backfill_name: String ): Builder var backfill_name: String","title":"backfill_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/batch_range/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / batch_range batch_range \u00b6 fun batch_range(batch_range: KeyRange ): Builder var batch_range: KeyRange","title":"Batch range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/batch_range/#batch_range","text":"fun batch_range(batch_range: KeyRange ): Builder var batch_range: KeyRange","title":"batch_range"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / build build \u00b6 fun build(): RunBatchRequest","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/build/#build","text":"fun build(): RunBatchRequest","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/dry_run/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / dry_run dry_run \u00b6 fun dry_run(dry_run: Boolean ): Builder var dry_run: Boolean","title":"Dry run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/dry_run/#dry_run","text":"fun dry_run(dry_run: Boolean ): Builder var dry_run: Boolean","title":"dry_run"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/instance_name/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / instance_name instance_name \u00b6 fun instance_name(instance_name: String ): Builder var instance_name: String","title":"Instance name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/instance_name/#instance_name","text":"fun instance_name(instance_name: String ): Builder var instance_name: String","title":"instance_name"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/parameters/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / parameters parameters \u00b6 fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. var parameters: MutableMap < String , ByteString>","title":"Parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/parameters/#parameters","text":"fun parameters(parameters: MutableMap < String , ByteString>): Builder User provided parameters at creation. var parameters: MutableMap < String , ByteString>","title":"parameters"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/pipelined_data/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchRequest / Builder / pipelined_data pipelined_data \u00b6 fun pipelined_data(pipelined_data: PipelinedData ): Builder Provided data from the source backfill if this is the target backfill in a pipelined backfill. var pipelined_data: PipelinedData","title":"Pipelined data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-request/-builder/pipelined_data/#pipelined_data","text":"fun pipelined_data(pipelined_data: PipelinedData ): Builder Provided data from the source backfill if this is the target backfill in a pipelined backfill. var pipelined_data: PipelinedData","title":"pipelined_data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse RunBatchResponse \u00b6 class RunBatchResponse : Message< RunBatchResponse , Builder > Types \u00b6 Name Summary Builder class Builder : Builder< RunBatchResponse , Builder > Constructors \u00b6 Name Summary <init> RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData ) RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData , unknownFields: ByteString) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< RunBatchResponse > DEFAULT_BACKOFF_MS static val DEFAULT_BACKOFF_MS: Long backoff_ms val backoff_ms: Long How much to sleep before starting new batches. For example can be set to replication lag. pipelined_data val pipelined_data: PipelinedData Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/#runbatchresponse","text":"class RunBatchResponse : Message< RunBatchResponse , Builder >","title":"RunBatchResponse"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/#types","text":"Name Summary Builder class Builder : Builder< RunBatchResponse , Builder >","title":"Types"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/#constructors","text":"Name Summary <init> RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData ) RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData , unknownFields: ByteString)","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< RunBatchResponse > DEFAULT_BACKOFF_MS static val DEFAULT_BACKOFF_MS: Long backoff_ms val backoff_ms: Long How much to sleep before starting new batches. For example can be set to replication lag. pipelined_data val pipelined_data: PipelinedData","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-a-d-a-p-t-e-r/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< RunBatchResponse >","title":" a d a p t e r"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-a-d-a-p-t-e-r/#adapter","text":"static val ADAPTER: ProtoAdapter< RunBatchResponse >","title":"ADAPTER"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-d-e-f-a-u-l-t_-b-a-c-k-o-f-f_-m-s/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / DEFAULT_BACKOFF_MS DEFAULT_BACKOFF_MS \u00b6 static val DEFAULT_BACKOFF_MS: Long","title":" d e f a u l t  b a c k o f f  m s"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-d-e-f-a-u-l-t_-b-a-c-k-o-f-f_-m-s/#default_backoff_ms","text":"static val DEFAULT_BACKOFF_MS: Long","title":"DEFAULT_BACKOFF_MS"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / <init> <init> \u00b6 RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData ) RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData , unknownFields: ByteString)","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-init-/#init","text":"RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData ) RunBatchResponse(backoff_ms: Long , pipelined_data: PipelinedData , unknownFields: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/backoff_ms/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / backoff_ms backoff_ms \u00b6 val backoff_ms: Long How much to sleep before starting new batches. For example can be set to replication lag.","title":"Backoff ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/backoff_ms/#backoff_ms","text":"val backoff_ms: Long How much to sleep before starting new batches. For example can be set to replication lag.","title":"backoff_ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/equals/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/hash-code/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / hashCode hashCode \u00b6 fun hashCode(): Int","title":"Hash code"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/new-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / newBuilder newBuilder \u00b6 fun newBuilder(): Builder","title":"New builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/new-builder/#newbuilder","text":"fun newBuilder(): Builder","title":"newBuilder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/pipelined_data/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / pipelined_data pipelined_data \u00b6 val pipelined_data: PipelinedData","title":"Pipelined data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/pipelined_data/#pipelined_data","text":"val pipelined_data: PipelinedData","title":"pipelined_data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/to-string/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / toString toString \u00b6 fun toString(): String","title":"To string"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / Builder Builder \u00b6 class Builder : Builder< RunBatchResponse , Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary backoff_ms var backoff_ms: Long pipelined_data var pipelined_data: PipelinedData Functions \u00b6 Name Summary backoff_ms fun backoff_ms(backoff_ms: Long ): Builder How much to sleep before starting new batches. For example can be set to replication lag. build fun build(): RunBatchResponse pipelined_data fun pipelined_data(pipelined_data: PipelinedData ): Builder","title":"Home"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/#builder","text":"class Builder : Builder< RunBatchResponse , Builder >","title":"Builder"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/#properties","text":"Name Summary backoff_ms var backoff_ms: Long pipelined_data var pipelined_data: PipelinedData","title":"Properties"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/#functions","text":"Name Summary backoff_ms fun backoff_ms(backoff_ms: Long ): Builder How much to sleep before starting new batches. For example can be set to replication lag. build fun build(): RunBatchResponse pipelined_data fun pipelined_data(pipelined_data: PipelinedData ): Builder","title":"Functions"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/-init-/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/backoff_ms/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / Builder / backoff_ms backoff_ms \u00b6 fun backoff_ms(backoff_ms: Long ): Builder How much to sleep before starting new batches. For example can be set to replication lag. var backoff_ms: Long","title":"Backoff ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/backoff_ms/#backoff_ms","text":"fun backoff_ms(backoff_ms: Long ): Builder How much to sleep before starting new batches. For example can be set to replication lag. var backoff_ms: Long","title":"backoff_ms"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/build/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / Builder / build build \u00b6 fun build(): RunBatchResponse","title":"Build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/build/#build","text":"fun build(): RunBatchResponse","title":"build"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/pipelined_data/","text":"client-misk / app.cash.backfila.protos.clientservice / RunBatchResponse / Builder / pipelined_data pipelined_data \u00b6 fun pipelined_data(pipelined_data: PipelinedData ): Builder var pipelined_data: PipelinedData","title":"Pipelined data"},{"location":"0.x/client-misk/app.cash.backfila.protos.clientservice/-run-batch-response/-builder/pipelined_data/#pipelined_data","text":"fun pipelined_data(pipelined_data: PipelinedData ): Builder var pipelined_data: PipelinedData","title":"pipelined_data"}]}